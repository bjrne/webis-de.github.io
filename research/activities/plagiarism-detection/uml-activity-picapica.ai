%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 7.0
%%AI8_CreatorVersion: 9.0
%%For: (Benno Stein) (Uni Paderborn)
%%Title: (uml-activity-plagiarism-analysis.ai)
%%CreationDate: 3/9/2007 2:35 PM
%%BoundingBox: 39 300 529 783
%%HiResBoundingBox: 39.3101 300.0977 528.3955 782.7383
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 21 -11 589 805
%AI3_DocumentPreview: None
%AI5_ArtSize: 595 842
%AI5_RulerUnits: 4
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -93.5 843.5 1 983 852 18 1 1 70 116 1 1
%AI5_OpenViewLayers: 7
%%PageOrigin:21 -11
%%AI3_PaperRect:-12 830 583 -12
%%AI3_Margin:12 -12 -12 12
%AI7_GridSettings: 28.3465 20 28.3465 20 1 0 0.7529 0.7529 0.7529 0.8765 0.8765 0.8765
%AI9_Flatten: 1
%AI7_Thumbnail: 128 128 8
%%BeginData: 15316 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFFFFD7CA8FFFFFFA8FD7CFF7DFFA8A8FD7DFFA87DFD7EFFA8A8FD
%04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD
%05FFA87DFFFFFFA8FD1DFFA8FD15FFA8FD15FFA8FD15FFA8FD1AFFA8A8FD
%1AFF7DFD5FFFA8FFFFFF7D7DFFFFFFA8FD05FFA8A8A8FFA8A8A8FFFD05A8
%FFA8FF7D7D7DFD05FFA8FD05FF7DA8A8A8FFFD06A8FD05FFA8FFFFFF7DFF
%A8A8A8FFA8A8FFA8A8FFA8FFA8FFFFFFA8FFFFFF7DFFA8A8A8FFFD05A8FF
%A8FFA8A8A8FFA8FFFFFFFD09A8FFA8A8A8FFA8A8A8FFFFA8FFFFFFA8A8FD
%09FFA87DA8FD057DFFA8A87D7D7DFFFFFF7DFD0CFF7D7D5252FFFD047D52
%A8FD09FF7D7DA87DA8A8A87DA87D7D7DA87DA87DFD06FF7D7DA8A8A87D7D
%7DA87DA87DA87DA8A8A8FD05FFA8A8A87DA8FD047DA87D7DA8FD047DFFFF
%A8FFFFFFA87DFFFFFFA8FD15FFA8A8A8FD05FFA8FD15FFA8FD07FFA8FD0D
%FFA8FD07FFA8FD0BFFA8FFA8FD07FFA8FD0EFFA8FFFFFFA8A8FD7AFFA8FF
%FFFFA87DFFFFFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A87DFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A87DFFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFFD04A8FFFFFFA8A8FD7AFFA8FFFFFFA87DFFFFFFA8FD1DFFA8FD15
%FFA8FD15FFA8FD15FFA8FD1AFFA8A8FD7AFFA8FFFFFF7D7DFFFFFFA8FD1D
%FFA8FD15FFA8FD15FFA8FD15FFA8FD16FFA8FFFFFFA8A8FD27FFFD09A8FD
%0DFFA8A1A7A1A7A1A7A1A7CAFD0DFFFD09A8FD1DFFA8FFFFFFA87DFFFFFF
%A8FD04FFFD057D52527DA852FD0FFFA8FD04FF7DFFFFA8FFFFFFA8FFFFA8
%A8FD05FFA8FD04FFA69FFD08C79FA7FD05FFA8FD05FF7DFFA8FD07FFA8A8
%FD04FFA8FD16FFA8FFFFFFA8A8FD06FFA8FFA8FD1CFFA8FFFF7D7D527D52
%A87DFFFFA8FD09FFCF9FA59FFD05C79FC7C7A0FD0AFFA8FFFF7D7DA852FD
%047DFFA8FD1BFFA8FFFFFFA87DFFFFFFA8FFA8277DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA8F87D7DFD07FFA8FFFFFF7DFF
%FFA87DA87DA8522752C7747B749F507B4A9F749F7BFFFFA87DA87DA87DA8
%F852FD04FFA8FFA8FD04FFA8FD04FFA8FD1AFFA8A8FD06FFA8FD20FF7D7D
%7D5252FD047DFFA8FFFFA8FD07FF9FFD0AC7A6FFFFA8FD08FFA8FF527D7D
%52FD047DFFA8FD1BFFA8FFFFFFA87DFFFFFFA8FD1DFFA8FD04FFA87DA87D
%A87DA87DA87DA8FFFFFFA8FFFFA8FD04FFA77A9F7A9F749F7A9F7A9FA8FF
%FFA8FFFFA8FD05FFA8A87DA87DA87DA87DA87DFD05FFA8FD1AFFA8A8FD2B
%FFA8FD08FFA8FD0CFFA8FD08FF7DFD0DFFA8FD21FFA8FFFFFF7D7DFFFFFF
%A8FD1DFFA8FD09FF7DFD08FFA8FFFFA8FD09FF7DFD08FFA8FFFFA8FD0AFF
%A8FD0AFFA8FD16FFA8FFFFFFA8A8FD0CFFFD0CA8FD13FFA8FD08FFA8FD0C
%FFA8FD08FFA8FD0DFF7DFD21FFA8FFFFFFA87DFFFFFFA8FD08FFA8FFFFFF
%FD04A8FFFFFF7DFD09FFA8FD09FF7DFD08FFA8FFFFA8FD09FF7DFD08FFA8
%FFFFA8FD0AFF527DFD09FFA8FD16FFA8FFFFFFA8A8FD06FFA8A87DA87D52
%7DFFFFFF7D7D7DA8FFFFFF7D527DA8A87DA8A8A87DA8A8A87DA8A8A87DA8
%A87DFD08FF7DFD0CFFA8FD08FFA8FD0DFF7DFD21FFA8FFFFFFA87DFFFFFF
%A8FFFFA8FD04FF7DA8FD0AFF7DA87DFD07FFA8FD12FFA8FFFFA8FD09FF7D
%FD08FFA8FFFFA8FD06FF7D7DA87DA87DA87DA87DFD05FFA8FD1AFFA8A8FD
%06FFA8FD05FFA8FD0AFFA8FD1CFFA8FD0CFFA8FD08FFA8FD09FF7DFD08FF
%A8FD1CFFA8FFFFFFA87DFFFFFFA8FFFFA8FD05FFA87DA87DA87D7D7DA87D
%A8A8FD09FFA8FD12FFA8FFFFA8FD09FF7DFD08FFA8FFFFA8FD06FF7D7D52
%527D7D7D527D7DFD05FFA8FD1AFFA8A8FD06FF7DFFA8FD09FF7DFD21FFA8
%FD0CFFA8FD08FF7DFD09FFA8FD08FFA8FD1CFFA8FFFFFF7D7DFFFFFFA8FF
%FFA8FF7D7D7D527D7D7D527DA8A8FD0EFFA8FD12FFA8FFFFA8FD09FF7DFD
%08FFA8FFFFA8FD06FFA8FD08FF7DFD05FFA8FD16FFA8FFFFFFA8A8FD06FF
%A8FD0BFFA8FD21FFA8FD0CFFA8FD08FFA8FD09FFFD04A87DFD05A8FD1CFF
%A8FFFFFFA87DFFFFFFA8FFFFA8FF7D7D7D52FD047DFFFFA8FD0EFFA8FD12
%FFA8FFFFA8FD09FF52A8FD07FFA8FFFFA8FD0AFFA8FD0AFFA8FD16FFA8FF
%FFFFA8A8FD06FFA8FD04FFCF7DA77DFFFFFFA8FD21FF7DFD0CFF52A8FD07
%FFA8FD0DFF7DFD21FFA8FFFFFFA87DFFFFFFA8FFFFA8FD04FF7CC7A47B51
%FFFFA8FD0EFFA8FD05FF7CA07CA67CA07CA67CA8FFFFFFA8FFFFA8FD04FF
%A77CA67CA075A67CA07CA6A8FFFFA8FFFFA8FD0AFF527DFD09FFA8FD1AFF
%A8A8FD06FFA8FD04FFA7C7C79FA07DFFA8FD14FF9FFD08C7A1FFFFFFA8FD
%07FFA0C79FFD08C7A7FFFFA8FD0DFF7DFD21FFA8FFFFFFA87DFFFFFFA8FF
%FFA8FD04FF7CFD04C7A7FFA8FD0BFFA87DA87DA87DA852A87AC7C79F9EFD
%04C77C7DA87D7DFFFFA8FD04FFA07A7B50754A75507B74C77DFFFFA8FFFF
%A8FD06FFA87DA87DA87DA87DA8A8FD05FFA8FD1AFFA8A8FD06FF7DFD04FF
%A7FD04C7A1FF7DFD0BFF7DFD06FF7DA89FC7C7749F74C7C7C7A1FD0BFFA0
%FD05C79FC79FC7C7A7FFFF7DFD08FFA8FFFFFFA8A8FD05FFA8FD1BFFA8FF
%FFFF7D7DFFFFFFA8FFFFA8FD04FF7CC7C7C7A4A7FFA8FD0BFFA8FFFFA8FD
%05FF7AC7C7C7A4C7C7C7A4A7FD06FFA8FD04FFA6C7C7507B7450269FC7C7
%7DFFFFA8FFFFA8FD04FFA8A8FFFFFF527D527DFFFFFFA8FD04FFA8FD16FF
%A8FFFFFFA8A8FD06FFA8FD04FFA7FD04C7A1FFA8FD0BFFA8FD08FFA09FA6
%9FA69FA69FA6A7FD0BFFA1A69FA69FA09FA69FA69FCAFFFFA8FD07FFA8FD
%07FFA8FFFFFFA8FD1BFFA8FFFFFFA87DFFFFFFA8FFFFA8FD04FFA1A675A0
%7CCAFFA8FD0BFFA8FFFFA8FD15FFA8FD09FF7DFD08FFA8FFFFA8FD05FF7D
%FFFFFD04527D7DFFFFA8FD04FFA8FD16FFA8FFFFFFA8A8FD06FFA8FD06FF
%A8FD04FFA8FD0BFFA8FD22FFA8FD08FFA8FD09FF7DA8A8A87DA8A8A87DA8
%FD1CFFA8FFFFFFA87DFFFFFFA8FFFFA8FD06FF7DFD04FFA8FD0BFFA8FFFF
%A8FD15FFA8FD09FF7DFD08FFA8FFFFA8FD0AFFA8FD0AFFA8FD1AFFA8A8FD
%06FFA8FD06FFA8FD04FFA8FD0BFFA8FD22FFA8FD08FFA8FD0DFFA8FD21FF
%A8FFFFFFA87DFFFFFFA8FFFFA8FD06FF52FFFFFFA87DFD0BFFA8FFFFA8FD
%15FFA8FD09FF7DFD08FFA8FFFFA8FD0AFF7DA8FD09FFA8FD1AFFA8A8FD06
%FF7DFD06FF27A8FFFFFF27FD0BFF7DFD22FFA8FD08FF7DFD0DFF52A8FD20
%FFA8FFFFFF7D7DFFFFFFA8FFFFA8FD06FF52A87DA87D7D7DFD0AFFA8FFFF
%A8FD15FFA8FD09FF7DFD08FFA8FFFFA8FD05FFA8A87DA87D7D7DA87DA87D
%FD05FFA8FD16FFA8FFFFFFA8A8FD06FFA8FD05FFA8FD07FFA8FD09FFA8FD
%22FFA8FD08FFA8FD08FFA8A8A8FD08FFA8FD1BFFA8FFFFFFA87DFFFFFFA8
%FFFFA8FD04FF7DFFA8A8A8FFFFFFA8FF7DFD08FFA8FFFFA8FD15FFA8FD09
%FF7DFD08FFA8FFFFA8FD05FF7DA87D527DA8FD0452FFA8FD04FFA8FD16FF
%A8FFFFFFA8A8FD06FFA8FD04FFA8FFA8FD057DA8FFA8FD08FFA8FD22FFA8
%FD08FFA8FD08FFA8FFFFA8FF7DFD05FFA8FD1BFFA8FFFFFFA87DFFFFFFA8
%FFFFA8FD04FF7DFFFFA8FD06FF7DFD08FFA8FFFFA8FD15FFA8FD09FF7DFD
%08FFA8FFFFA8FD05FF7DFFFFA8FD047DA8FFFFA8FD04FFA8FD1AFFA8A8FD
%06FFA8FD05FFA8FD07FF7DFD09FFA8FD22FFA8FD08FFA8FD08FFA8FD0AFF
%A8FD1BFFA8FFFFFFA87DFFFFFFA8FFFFA8FD06FFA8A87D7D7DA8A8FD0AFF
%A8FFFFA8FD15FFA8FD09FF7DFD08FFA8FFFFA8FD05FFA8A87DA87D7D7DA8
%7DA87DFD05FFA8FD1AFFA8A8FD06FF7DFD09FF7DFD0DFF7DFD22FF527DFD
%07FF7DFD0DFF7DFD21FFA8FFFFFF7D7DFFFFFFA8FFFFA8FD08FFA852FD0D
%FFA8FFFFA8FD15FFA8FD09FF7DA8FD07FFA8FFFFA8FD0AFF527DFD09FFA8
%FD16FFA8FFFFFFA8A8FD06FFA8FD06FFA87D7D527D7DA8FD0AFFA8FD20FF
%A8FD057DFD05FFA8FD0BFF7D7D527D7D7DFD1EFFA8FFFFFFA87DFFFFFFA8
%FFFFA8FD06FFA87DA8A8A87DA8FD0AFFA8FFFFA8FD15FFA8FD07FFA87DA8
%A8A87DFD05FFA8FFFFA8FD08FFA87DA8A87DA8FD07FFA8FD16FFA8FFFFFF
%A8A8FD06FFA8FD07FFA8FFFFFFA8FD0BFFA8FD21FF7DFFFFFF7DFD05FFA8
%FD0CFFA8FFFFA8FD1FFFA8FFFFFFA87DFFFFFFA8FFFFA8FD07FFA8FFFFFF
%A87DA87DA87DA87DA87DA87DA8FFFFA8FD15FFA8FD08FFA8FFFFFF7D7DA8
%7DA87D7DFFFFA8FD09FF7DFFFFFF7DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DFD0EFFA8A8FD06FFA8FD07FFA8FD31FFA8FD09FFA8FD0CFFA8
%FD17FFA8FD0AFFA8FFFFFFA87DFFFFFFA8FFFFA8FD07FF27A8FD11FFA8FD
%15FFA8FD07FFA827FD09FFA8FFFFA8FD08FFA827FD0BFFA8FD0BFF27FD0E
%FFA8A8FD06FF7DFD07FF7DFD2DFF84847D8452847D84AFFD05FF7DFD0CFF
%7DFD17FFA8FD0AFFA8FFFFFF7D7DFFFFFFA8FFFFA8FFFFFFA87DA87DA87D
%A87DA8A8FD0DFFA8FD15FFA8FFFFAF131B1514141B141B151459FD04FFA8
%FFFFA8FD05FF7DA87DA87DA87DA87DFD07FFA8FD06FFA87DA87DA87DA87D
%A8A8FD06FFA8FFFFFFA8A8FD06FFA8FFFFA8FFFFFF7D7D527DFFFFA8FD26
%FF361B1B1B0D130D0D141B1B1B84FFFFFFA8FD07FFA8A8A8FFFFFFA8FFFF
%FFA8FD0DFFA8A8FD06FFA8FFA8FD05FFA8FFFFFFA87DFFFFFFA8FFFF7D52
%2752FD04FFA8FD04FFA8A8FD0CFFA8FD15FFA8FFFF36151B151B1514151B
%151B1584FFFFFFA8FFFFA8FD04FFA87DA87D7D527D527D7DA8FD06FFA8FD
%05FF7DFF527D7DA87D7D2752FFA8FD05FFA8FFFFFFA8A8FD06FFA8FFFFA8
%FD04FFA8FD04FFA8FD26FF361B1B0C0C0C130D0D0D1B1B84FFFFFFA8FD07
%FFA8FD09FF7DFD0CFFA8FD0AFF7DFD05FFA8FFFFFFA87DFFFFFFA8FFFFA8
%FFFFA8A8FFFD047DA87DFF7DFD0DFFA8FD15FFA8FFFFA9131B151B151415
%1B151B35FD04FFA8FFFFA8FD04FFA8A8FD07FFA8A8FD06FFA8FD06FFA8FD
%08FF7DFD0AFFA8A8FD06FFA8FD04FFA87DA8A8A87DA8A8FD29FF7E847E84
%53847E8484FD05FFA8FD08FFFD04A87DA8A8A8FD10FFFD04A87DA8A8A8FD
%07FFA8FFFFFFA87DFFFFFFA8FFFFA8FD05FF27FFFFFFA8FD10FFA8FD15FF
%A8FD08FFA8FD09FFA8FFFFA8FD09FF7DFD0BFFA8FD0BFF7DFD0EFFA8A8FD
%06FF7DFD05FF52FFFFFFA8FD2FFFA8FD09FF7DFD0CFFA8FD17FFA8FD0AFF
%A8FFFFFF7D7DFFFFFFA8FFFFA8FD05FFA8FFFFFFA8FD10FFA8FD15FFA8FD
%08FFA8FD09FFA8FFFFA8FD08FFA827FD0BFFA8FD0AFF7D52FD0AFFA8FFFF
%FFA8A8FD06FFA8FD05FFA8FFFFFFA8FD2FFFA8FD09FFA8FD0CFF7DFD16FF
%A8A8FD0AFFA8FFFFFFA87DFFFFFFA8FFFFA8FD05FFA8FFFFFFA8FD10FFA8
%FD15FFA8FD08FFA8FD09FFA8FFFFA8FD04FF832C572C572C572C572CFD07
%FFA8FD06FF582C572C572C572C572DFD06FFA8FFFFFFA8A8FD06FFA8FD05
%FF7DFFFFFF7DFD2FFF7DFD09FFA8FD07FF7D5D575D2D57575D5D57FD0EFF
%7C5D57573357575D5D58FD06FFA8FFFFFFA87DFFFFFFA8FFFFA8FD05FFA8
%FFFFFF5252FD0FFFA8FD15FFA8FD08FFA8FD09FFA8FFFFA8FD04FF83575D
%332D2C26335D2CFD07FFA8FD06FF7C575D2C572C2D335D57FD0AFFA8A8FD
%06FFA8FD05FFA8FFFFFF7DFD04FFA8FD2AFFA8FD09FFA8FD07FF7D5D575D
%5D5D575D5D57FD0EFF7C5D575D5D5D575D5D58FD06FFA8FFFFFFA87DFFFF
%FFA8FFFFA8FD05FFA8FFFFFFA87DFFFFFF7D2752527D7D527DFD04FFA8FD
%15FFA8FD08FFA8FD09FFA8FFFFA8FD04FF83575D575D575D575D2CFD07FF
%A8FD06FF7C575D575D575D575D57FD0AFFA8A8FD06FF7DFD05FF7DA87D7D
%FFFF7DA8A87D7DA8A8A87DFD04A8FD21FFA8FD09FF7DFD07FFA8837C7D58
%7C7C7D587CFD0EFF83837C7D587C7C7D5883FD06FFA8FFFFFF7D7DFFFFFF
%A8FFFFA8FFFFFFA8FFA8FFA8A8FFA8A8FFFFA8FFA8FFA8FFA8A8FFA8FFFF
%A8FD15FFA8FD08FFA8FD09FFA8FFFFA8FD09FF7DFD0BFFA8FD0BFF7DFD0A
%FFA8FFFFFFA8A8FD06FFA8FFFFFFFD057DFFA8FD04FFA87DA87D525252A8
%FFA8FD21FFA8FD09FFA8FD0CFFA8FD17FFA8FD0AFFA8FFFFFFA87DFFFFFF
%A8FFFFA8FFFFFFA8FFFFFFA8FFA8FD0BFFA8FFA8FFFFA8FD15FFA8FD08FF
%A8FD09FFA8FFFFA8FD08FFA827FD0BFFA8FD0AFF7D52FD0AFFA8FFFFFFA8
%A8FD06FFA8FD09FF7DFD0DFFA8FD21FF7DFD09FFA8FD0CFF52FD16FFA8A8
%FD0AFFA8FFFFFFA87DFFFFFFA8FFFFA8FD09FFA8FD0DFFA8FFFFA8FD15FF
%A8FD08FFA8FD09FFA8FFFFA8FD04FFA8587C587C587C587C58CFFD06FFA8
%FD06FF83587C587C587C587C7CFD0AFFA8A8FD06FFA8FD06FFA8FFFFA8FF
%FFFFA8FFA8FD07FFA8FD21FFA8FD09FFA8FD06FFA8575D575D5D5D575D5D
%5D57FD0CFF83575D575D5D5D575D5D5D58FD05FFA8FFFFFFA87DFFFFFFA8
%FFFFA8FD06FF7DA87D7D7D52277D7DA8FD07FFA8FFFFA8FD15FFA8FD08FF
%A8FD09FFA8FFFFA8FFFFFF575D2C5D575D575D335D575D58FD05FFA8FD05
%FF2D57335D575D575D335D5757A8FD08FFA8A8FD06FF7DFD06FFA8FFFFA8
%FD05FFA8FD07FF7DFD21FFA8FD09FF7DFD06FF5833572C2D2C2D2D572C2D
%5D83FD0BFF572C572D572C2D2C2D2C5757A8FD04FFA8FFFFFF7D7DFFFFFF
%A8FFFFA8FD09FF527DFD0CFFA8FFFFA8FD04FF5A355A355A355A355A355A
%FD06FFA8FD08FFA8FD09FFA8FFFFA8FFFFFF7C5D335D575D335D575D3357
%A8FD05FFA8FD05FF575D335D575D335D575D3357FD05FFA8FFFFFFA8A8FD
%06FFA8FD09FF7DA8FD0CFFA8FD07FF361414FD071B14FFA8FD0DFFA8FD09
%FFA8FD07FF5858335733573357335883FD0DFF5858335733573357337CAE
%FD05FFA8FFFFFFA87DFFFFFFA8FFFFA8FD05FFA87D7D7DA87DA87DA8A8FD
%08FFA8FFFFA8FD04FF360D0D050CFD050D147D2752A87DA87DA87DA87DA8
%7DA87DA8FD09FFA8FFFFA8FD09FF7DFD0BFFA8FD0BFF7DFD0AFFA8FFFFFF
%A8A8FD06FFA8FD05FFA8FFFD067DFFA8FD08FFA8FD07FF361B141B14FD05
%1B13FD19FFA8FD0CFFA8FD17FFA8FD0AFFA8FFFFFFA87DFFFFFFA8FFFFA8
%7DA87DA87DFFFFFF7DA8A8A8FFFFFF7D27527DA87DA87D7D7DA87DA87DA8
%7D350D0D0D140D0D060C0D147D2752A87DA87DA87DA87DA87DFD0CFFA8FF
%FFA8FD09FF27FD0BFFA8FD0AFFA852FD0EFFA8A8FD0BFFA8FFFFFFA87D7D
%A8FFFFFFA8FFA8FD05FFA8FD07FF36FD091B14FD0CFFA8FD0CFFA8FD0CFF
%52FD16FF7D7DFD0AFFA8FFFFFFA87DFFFFFFA8FD08FF7DFD08FF7DFD08FF
%A8FFFFA8FD04FF36151B151B1514141B15147D277DA87DA87DA87DA8FFFF
%7DFD0CFFA8FFFFA8FD09FFA8FD0BFFA8FD0BFFA8FD0EFFA8A8FD0DFFA87D
%A8A8A87DA8A8FD09FF7DFD07FF351B1B0D14130D0D1B1B14FFA8FD07FF7D
%FFFFA8FD0CFF7DFD07FF2C2D2D572C5733572C5751FD0CFF832C2D2D572C
%5733572C5758FD05FFA8FFFFFF7D7DFFFFFFA8FD1AFFA8FFFFA8FD04FF59
%13363536133635361335FD06FFA8FFFFA8FFFF7DFD0CFFA8FFFFA8FD04FF
%332C572C332C2D042C2C58FD06FFA8FD05FF7D5D262D2C2D262D2C2D327C
%FD05FFA8FFFFFFA8A8FD1EFFA8FD1BFFA8FFFFA8FD0CFFA8FD07FF335D5D
%5D575D5757575D57FD0CFFA7575D5D5D575D5757575D7CFD05FFA8FFFFFF
%A87DFFFFFFA8FD1AFFA8FFFFA8FD15FFA8FFFFA8FFFF7DFD0CFFA8FFFFA8
%FD04FF5757572C2D2C2D2C5D5758FD06FFA8FD05FF7D5D57572C2D2C2D2C
%5D577CFD05FFA8FFFFFFA8A8FD1EFFA8FD1BFFA8FFFFA8FD0CFFA8FD07FF
%335D575D5D5D575D5D5D57FD0CFFA75D5D575D5D5D575D5D5D58FD05FFA8
%FFFFFFA87DFFFFFFA8FD1AFFA8FFFFA8FD15FFA8FFFFA8FFFF7DFD0CFFA8
%FFFFA8FD04FF837D837D837D8352837DA7FD06FFA8FD05FFA8837D837D83
%7D8352837DA8FD09FFA8A8FD1EFFA8FD1BFFA8FFFFA8FD0CFFFD0FA87DFD
%13A8FD04FFA8FD08FFA8FFFFFFA87DFFFFFFA8FD1AFFA8FFFFA8FD15FFA8
%FFFFA8FFFF7DFD0FFFA8FD07FF7DFFFFFF7DFD09FFA8FD08FFA8FD04FF7D
%FD0CFFA8A8FD1EFF7DFD1BFF7DFFFFA8FD16FF7D52FFFFFF27A8FD11FF27
%7DFFFFFF27FD08FFA8FFFFFF7D7DFFFFFFA8FD1AFFA8FFFFA8FD15FFA8FF
%FFA8FFFF7DFD0FFFA8FD07FF52FFFFFF7DFD09FFA8FD08FF7DA8FFFFFF7D
%FD08FFA8FFFFFFA8A8FD1EFFA8FD1BFFA8FFFFA8FD14FF84FD08366084FD
%0DFF5AFD083660AFFD05FFA8FFFFFFA87DFFFFFFA8FD1AFFA8FFFFA8FD15
%FFA8FFFFA8FFFF7DFD0FFFA8FFFFFF7E1B151B151B151B151B1514A8FD05
%FFA8FD05FF351B151B151B151B151B1536FD05FFA8FFFFFFA8A8FD1EFFA8
%FD1BFFA8FFFFA8FD13FF361414FD091B60FD0BFF1414FD051B141B1B1B14
%AFFD04FFA8FFFFFFA87DFFFFFFA8FD1AFFA8FFFFA8FD15FFA8FFFFA8FFFF
%7DFD0FFFA8FFFFFF3514140D0C0D0C0D0C0D0D1459FD05FFA8FD05FF0D13
%0D130C0C0513060D0614A8FD08FFA8A8FD1EFFA8FD1BFFA8FFFFA8FD13FF
%85151B1B1B14FD051B14FD0CFF60FD041B14FD051B35FD05FFA8FFFFFFA8
%7DFFFFFFA8FD1AFFA8FFFFA8FD15FFA8FFFFA8FFFF7DFD0FFFA8FD04FF84
%353635362F36353635A8FD06FFA8FD06FF84353635362F36353659FD0AFF
%A8A8FD1EFF7DFD1BFF7DFFFFA8FD19FFA8FD17FFA8FD0AFFA8FFFFFF7D7D
%FFFFFFA8FD1AFFA8FFFFA8FD15FFA8FFFFA8FFFF7DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA8A8FD0BFFA8FD0BFF7DFD0AFFA8FF
%FFFFA8A8FD1EFFA8FD1BFFA8FD34FFA8FD0AFFA8FFFFFFA87DFFFFFFA8FD
%1AFFA8FFFFA8FD15FFA8FFFFA8FD12FFA8FD15FFA8FD0BFF7DFD0AFFA8FF
%FFFFA8A8FD1EFFA8FD1BFFA8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D
%A8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8
%A87DA8A8FD0BFFA8FFFFFFA87DFFFFFFA8FD1AFFA8FFFFA8FD15FFA8FD15
%FFA8FD15FFA8FD1AFFA8A8FD1EFF52FD5BFFA8FFFFFFA87DFFFFFFA8FD19
%FFA852FFFFA8FD15FFA8FD15FFA8FD15FFA8FD1AFFA8A8FD1EFF7DFD5BFF
%A8FFFFFF7D7DFFFFFFA8FD19FF7DA8A8FFA8FD15FFA8FD15FFA8FD15FFA8
%FD16FFA8FFFFFFA8A8FD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FF7DA852FD04A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFFFFFA87DFFFFFFA8FD19FFA8A8A8FD5AFFA8FF
%FFFFA8A8FD7AFFA8FFFFFFA87DFFFFFFA8FD7AFFA8FFA8FD79FFA8FFFFA8
%FFFFFF7DFFA8FD78FFA8A8FD04FF7DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA8FD82FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
userdict /_useSmoothShade true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
7 Bn
%AI5_BeginGradient: (Black, White)
(Black, White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green, Blue)
(Green, Blue) 0 2 Bd
[
<
999A9A9B9B9C9D9D9E9E9FA0A0A1A2A2A3A3A4A5A5A6A6A7A8A8A9A9AAABABACABACADADAEAFAFAF
AFB0B1B1B3B2B3B5B4B5B5B6B7B6B7B7B8B8B8B9BABABBBBBCBDBDBEBEBFC0C0C1C1C1C2C2C3C2C3
C5C4C5C5C6C7C7C8C9C9CACACCCDCDCFCFD1D2D3D4D4D6D7D7D9D9DADCDCDEDFE0E2E3E4E4E4E5E5
E6E7E7E8E8E9EBECEEEFF1F4F3F3F2F1F1F0F0F1F1F1F2F3
>
<
03030404050505060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F20212223242526
2728292A2B2C2D2D2F303132323435363738393A3A3B3C3D3E3E3F40414243444445464748494A4B
4B4C4D4F5050525354555657595A5C5D5F626366686B6D6F7275787A7D80828487898C8D8F919395
96989B9D9EA0A2A4A6A8AAABADAFB1B2B4B6B7B9BBBCBEC0
>
<
F3F3F2F2F1F0EFEFEFEEEEEEEDEDEDECEDECEBEAE9E8E6E5E5E3E2E0DEDEDCDAD8D8D6D4D2D2D0CE
CCCACAC8C6C4C3C2BFBDBCBAB8B6B4B3B0AEACABA9A6A4A3A19E9C99989693908F8C8A878683807D
7A7875726E6D6A6663615E5B585554524F4D4D4B49484746444241413F3E3C3C3A39373634312F2D
2C2A2826252322201F1D1C1A19181715141312100F0E0D0B
>
<
00000000000000010101010101010202020202020303030303040404040505050606060707080808
09090A0A0B0B0B0C0C0D0D0E0E0F10111112131314151616171819191A1B1C1D1D1F1F2022222425
25262728292A2B2C2D2E2F2F2F2F2F2F2F2D2D2B292727252321201F1D1B1918161413131211100F
0F0E0D0C0B0A090807060503030303030303030302020202
>
<
66656564646362626161605F5F5E5D5D5C5C5B5A5A595958575756565554545353525151504F4F4E
4E4D4C4C4B4B4A49494848474646454544434342414140403F3E3E3D3D3C3B3B3A3A393838373736
353534343332323130302F2F2E2D2D2C2C2B2A2A292928272726262524242322222121201F1F1E1E
1D1C1C1B1B1A19191818171616151414131312111110100F
>
<
B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291
908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69
6867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241
403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29
>
<
2122232324252626272829292A2B2C2D2D2E2F303031323333343536373738393A3A3B3C3D3D3E3F
404141424344444546474748494A4B4B4C4D4E4E4F505151525354555556575858595A5B5B5C5D5E
5F5F606162626364656566676869696A6B6C6C6D6E6F6F707172737374757676777879797A7B7C7D
7D7E7F808081828383848586878788898A8A8B8C8D8D8E8F
>
4 %_Br
[
0.9529 0.7529 0.0431 0.0078 0.0588 0.1608 0.5608 2 50 100 %_Bs
0.6 0.0118 0.9529 0 0.4 0.7216 0.1294 2 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Orange, Green, Violet)
(Orange, Green, Violet) 0 3 Bd
[
<
EBEAE8E7E5E4E3E2E0DFDDDCDBDADAD9D8D7D5D4D3D1CFCCCAC7C4C1BEBDBBBAB8B8B7B5B4B2B0B0
AFAFAFAFAFAFB2B2B1B1B0B0AFAFAFAFAFAEAEAFAEAEAEADACACACACACABABAAABAAAAA9A8A8A7A6
A5A4A4A3A2A2A1A1A09F9E9D
>
<
414244454749494B4C4E5051535455565758595A5B5D5E606163656668686A6C6E707275787B7F83
84888C9093979B9EA1A5A8AAABAEB1B3B6B8BBBDBFC2C4C4C6C9CBCED0D2D4D6D8D9D9DBDCDEDFE1
E2E3E4E5E6E7E7E8E9EAEBEC
>
<
F3F0EEECE9E6E4E2DFDCD8D5D1CECAC7C3BFBCB7B4AFAAA5A09B96918B88847F7B7874706D6A6765
6361605E5C5B585756545351504E4D4B4A484745444241403E3C3B39373534312F2D2C2A27252321
1F1E1C1A181716141311100F
>
<
1D1F2122242627282A2C2E3032343537393B3C3E3F424447494C4E51535355565757575757565553
514F4D4A4845413E3C3A373533312F2D2A28262422201E1D1B1917151412100F0E0D0D0C0B0A0908
080706060505050404040303
>
<
13141516171819191A1B1C1D1E1F20212223242525262728292A2B2C2D2E2F303131323334353637
38393A3B3C3D3D3E3F40414243444546474849494A4B4C4D4E4F50515253545555565758595A5B5C
5D5E5F606161626364656667
>
<
605F5E5D5C5B5B5A59585756555453525150504F4E4D4C4B4A49484746464544434241403F3E3D3C
3C3B3A39383736353433323131302F2E2D2C2B2A29282727262524232221201F1E1D1D1C1B1A1918
1716151413121211100F0E0D
>
<
232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A
4B4C4D4E4F5052535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273
7475767778797A7B7C7D7E7F
>
4 %_Br
<
06060707080809090A0B0B0C0D0D0E0F10101112121314151516171818191A1B1C1C1D1E1F1F2021
22222324252526272828292A2A2B2C2D2D2E2F2F3031313233333435353636373838393A3A3B3B3C
3D3D3E3E3F3F4040414242434344444545464647474849494A4B4B4C4C4D4E4E4F50505152535354
555656575859595A5B5C5C5D5E5F6060616263646667696A6C6D6F707273757678797B7C7E7F8182
848587888A8C8D8F909293959698999B9C9E9FA1A2A4A5A6A8A9AAACADAFB0B1B3B4B5B7B8B9BBBC
BDBFC0C1C3C4C6C7C9CACBCDCED0D1D3D4D5D7D8D9DBDCDDDEE0E1E2E3E4E5E6E7E8E9EAEB
>
<
A0A0A0A0A0A0A09F9F9F9F9F9F9F9E9E9E9E9E9E9D9D9D9D9D9C9C9C9C9B9B9B9B9A9A9A9A999999
9898989897979796969695959594949493939391919090908F8F8F8E8E8D8D8C8C8C8B8B8A8A8989
8888888787868685858484838382828180807F7F7E7E7D7C7C7B7B7A797978777776757574737372
7171706F6F6E6D6D6C6B6B6A69686867666665646464636363626262626161616060605F5F5F5F5E
5E5E5D5D5D5C5C5C5B5B5B5A5A5A5959595757575656565555555454545353535252525151515050
504F4F4F4E4E4D4D4C4C4B4B4A4A4949484847474746464545444444434342424242414141
>
<
E6E6E6E7E7E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9EAEAEBEBEBECECEDEDEDEEEEEFEEEEEEEEEEEE
EEEEEEEDEDEDEDEDEDEDEDEDECECECECECEBEBEBEBEBEAEAEAE9E9E9E9E9E9E7E7E7E7E7E7E7E6E6
E6E5E5E5E5E4E4E4E4E4E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E4E4E4E4E4E4E5E5E5E6E6E6E5E5
E5E5E5E5E5E6E6E6E4E4E4E4E5E5E5E5E5E3E3E3E3E3E4E4E4E4E4E3E3E3E3E3E3E3E4E4E2E2E3E3
E3E3E4E4E4E4E3E3E4E4E4E4E5E5E5E4E5E6E6E6E7E7E8E8E9E8E8E9EAEAEBEBECECECEDEDEEEEEF
F0F0F1EFF0F0F1F1F1F1F2F2F2F1F1F1F1F2F2F2F2F3F1F1F2F2F2F2F3F3F3F3F2F2F2F3F3
>
<
00000001010101010101010101010102020202020202030303030303040404040505050606060607
07070808080909090A0A0B0B0B0C0C0C0D0D0E0E0F0F101011111212131314141516161717181819
1A1A1B1C1C1D1E1E1F20202122232324252526272828292A2A2B2C2D2D2E2F2F3031313233333435
353636373838393A3A3B3B3C3D3D3E3E3F4040404040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3A
3A3A393939383838373736363635353534333232323131313030302F2F2F2E2E2D2D2D2C2C2C2B2B
2B2A2A2A292928282827272626262525242423232322222121212020201F1F1E1E1E1E1D1D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413
>
<
5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E
5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F
5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F
5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F
5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6060606060606060606060606060606060606060606060
60606060606060606060606060606060606060606060606060606060606060606060606060
>
<
0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E
0E0E0E0F0F0F0F0F0F0F0F0F10101010101010101010111111111111111111121212121212121212
12131313131313131313141414141414141414141515151515151515151616161616161616161717
1717171717171717181818181818181818191919191919191919191A1A1A1A1A1A1A1A1A1B1B1B1B
1B1B1B1B1B1B1C1C1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1E1F1F1F1F1F1F
1F1F1F20202020202020202020212121212121212121222222222222222222222323232323
>
4 %_Br
[
0.6157 0.9255 0.0588 0.0118 0.4039 0.051 0.498 2 50 100 %_Bs
0.9216 0.2549 0.9529 0.1137 0.0745 0.3765 0.1373 2 50 50 %_Bs
0.0235 0.6275 0.902 0 1 0.3686 0.0392 2 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green )
(Pink, Yellow, Green ) 0 3 Bd
[
<
060707080809090A0A0B0C0C0D0E0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393B3C3D3E3F404142434445464748494A4B4C4D4E4F50
5152535455565758595A5B5C5E5F60616263646566666868696A6B6C6D6E6F70717273
>
0.0275
<
CECECECDCDCECECDCDCDCDCDCCCDCDCDCCCCCDCDCDCCCCCDCDCDCCCCCCCCCBCBCCCCCCCBCBCBCBCA
CACACACAC9C9C9C9C7C7C7C7C7C6C6C6C6C5C6C6C6C6C6C6C6C6C6C5C6C6C6C5C5C5C5C6C4C5C5C5
C4C4C4C4C5C4C4C4C4C3C3C3C3C3C2C3C3C3C3C2C2C2C2C1C1C1C1C2C0C0C1C1BFBFC0
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C
>
<
FAFAF9F9F8F8F8F7F7F6F6F6F5F5F4F4F4F3F3F2F2F2F1F1F0F0F0EFEFEEEEEDEDEDECECEBEBEBEA
EAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDBDBDBDA
DAD9D9D9D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D2D1D1D0D0D0CFCFCECECECDCDCCCC
>
<
3333333434343435353535353636363637373737373838383838393939393A3A3A3A3A3B3B3B3B3C
3C3C3C3C3D3D3D3D3E3E3E3E3E3F3F3F3F4040404040414141414142424242434343434344444444
45454545454646464647474747474848484848494949494A4A4A4A4A4B4B4B4B4C4C4C
>
4 %_Br
<
0F0F0F0F0F0F0F1010100F0F0F10101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0E0D0D
0D0D0D0D0C0C0C0C0B0B0B0B0B0B0C0C0C0C0D0C0C0C0D0D0D0D0D0E0E0D0D0D0D0D0D0D0D0D0D0D
0D0C0C0C0C0C0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0C0C0B0B0C0C0C0C0C0C0C0B0B0B0B
0B0B0A0A0A090908080808080808070708080809090A0909090A0A0A0A0A0B0A0A0A0A0A0A0A0A09
08080807070606050405060607070808080808080909090909090909090909090909080808070707
060606060505050505050506
>
<
B3B3B1B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A8A7A7A6A6A5A4A4A2A1A1A0A09F9E9E9D9C9C
9B9A999998979796959594939191908F8E8E8D8C8C8B8A8988888685848583828181807F7E7D7D7C
7B7A797978777675747574727170706F6E6D6C6B6B6A696866656464636261605F5E5D5D5C5B5A59
58575656555554535251504F4F4E4D4C4B494847464544444342403F3E3D3C3B3A39383736363535
3433323131302F2E2E2C2B2A2827262524242322201F1E1D1C1B1A19181716151413121111100F0E
0E0D0C0B0B0A090908080707
>
<
0909090A0A0B0B0C0C0D0E0F0F10101112121214141516161818191A1A1B1C1D1E1F1F2021212323
25262828282B2B2D2D2F2F31323334353637383A3A3C3C3E3F4041434345454748494A4C4C4E4E50
50525454565658595A5A5C5D5E60606262646466666769696B6C6D6D6F6F71737375757678787A7A
7C7C7E7F7F818182848486868789898A8B8C8E8E8F90919293949496979899999B9C9C9E9F9FA1A1
A2A3A4A5A6A6A8A8A9AAABACADADAFB0B0B1B1B3B4B4B6B8B8B9BBBBBDBEBEBFC0C1C2C2C3C4C4C5
C6C6C7C8C9CACBCBCCCDCDCE
>
0
<
E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBECECEC
ECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFF0
F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F4F4F4F4
F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F9
F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFD
FEFEFEFEFEFEFEFEFFFFFFFF
>
<
4E4E4F4F4F505051515252535354545555565657575859595A5A5B5C5C5D5E5E5F5F606161626363
64656666676868696A6A6B6C6D6D6E6F70707172727374757676777879797A7B7C7C7D7E7F808081
828384848586878889898A8B8C8D8D8E8F9091929293949596979898999A9B9C9D9E9F9FA0A1A2A3
A4A5A6A6A7A8A9AAABACADAEAEAFB0B1B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C1C2C3C4C5C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
EFF0F1F2F3F4F5F6F7F8F9FA
>
<
A5A5A5A4A4A4A4A3A3A3A2A2A2A1A1A1A0A0A09F9F9E9E9E9D9D9C9C9C9B9B9A9A99999998989797
9696959595949493939292919190908F8F8E8E8D8D8C8C8B8B8A8A89898888878786868585848483
8382818180807F7F7E7E7D7D7C7B7B7A7A7979787877767675757474737372717170706F6E6E6D6D
6C6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A5958585756565555
54535352515150504F4E4E4D4C4C4B4A4A494948474746454544434342414140403F3E3E3D3C3C3B
3A3A39383837363635343433
>
4 %_Br
[
0.451 0.0275 0.7529 0 0.549 0.8 0.298 2 50 100 %_Bs
0.0235 0.0275 0.8078 0 1 0.9804 0.2 2 50 64 %_Bs
0.0588 0.702 0.0353 0 0.9137 0.3059 0.6471 2 57 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red, Yellow)
(Purple, Red, Yellow) 0 3 Bd
[
<
04040404040404040404040505050505050505050606060606060606070707070707070707070708
08070707070707070707070706060606060605050505050505050505050505050506060606070707
07070707070707070707070707070706060606060606060606060606060606060707070707080808
08080807070707070706060606050506060606060606060606060607070707070707080807070707
07070706060605050505050505050505050506060607070707070707070707070707070706060605
05040403030202020203030404050506060607070707070707070707070707060606060505040403
030303030303
>
<
F5F5F5F5F4F4F4F4F4F3F3F2F2F1F1F0F0EFEEEEEDECECEBEAE9E8E7E6E6E5E4E3E2E1E0DFDEDDDB
DAD9D8D7D6D5D4D2D1D0CFCECCCBCAC9C8C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6C6B6A696867666564636261605F5E
5D5C5B5A595857565554535251504F4E4D4C4B4A4947464544434241403F3E3D3C3B3A3938383736
353433333231302F2E2D2B2A2928272524232221201F1E1D1C1B1A19181716151413121211100F0F
0E0D0C0C0B0A
>
<
D1D1D1D1D1D3D3D3D3D3D3D3D3D3D4D6D6D6D6D6D6D6D6D6D7D9D9D9D9D9D9D9D9DADADCDCDCDCDC
DCDCDCDDDDDEDEDFDFDFDFDFDFDFE1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E2E2E2E2E2E2
E2E2E2E2E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E4E4E5E5E5E5E5E6E6
E6E6E6E7E7E7E7E7E7E8E8E8E8E9E9E9E9E9E9EAEAEAEAEBEBEBEBECECECECECEDEDEEEEEEEEEFEF
EFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F5F5F5F5F5F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F1F1
F1F0F0F0EFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E8E8
E8E8E8E8E8E8
>
0
<
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5
>
<
19191919191818181818181818181817171717171717171717161616161616161616161515151515
15151515151414141414141414141313131313131313131312121212121212121212111111111111
11111111101010101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D
0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0909090909090909
09090808080808080808080807070707070707070707060606060606060606060505050505050505
05040404040404040404040303030303030303030302020202020202020202010101010101010101
010000000000
>
4 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD8D7D6D5D4D2D1D0CECDCCCAC9C7C6C5C4C3C1C0BFBEBCBBBAB8B7B6
B5B3B2B1AFAEADABAAA9A7A6A5A3A2A09F9D9C9A999796949391908E8D8B8A8886858382807F7D7C
7A7978767572716F6E6B6A6866646361605D5C5A5957555352504F4C4A4947474646454544444343
4242414140403F3E3E3D3D3C3C3B3B3A3A393838373736353534343332323130302F2E2E2D2C2C2B
2A2929282727262525242323222121201F1E1E1D1C1B1A1A191817171615141413121111100F0E0E
0D0C0C0B0A0909080706060504
>
<
E6E6E6E6E6E6E8E8E8E8E8E8E8E8E8E9E9EAEAEAEAEBEBEBEBEBEBEBECECECEDEDEDEDEDEDEDEDED
EEEEEEEEEEEEEEEEEDEDEDEEEDEDEDEDECECECECEBEBEBEBEBEBEBEBEAEAEAEAEAEBEBEBEBEBEBEB
EBEBEBEBECECECECECECECECECECECEDEDEDEDEDEDEDEEEEEEEEEEEEEEEFEFEFEFEFEFF0F0F0F1F1
F1F1F2F2F2F3F3F3F4F5F5F5F6F6F7F7F8F8F9F9FAF9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F2F1F1
F0F0F0EFEFEFEEEEEEEDEDEDEDECECECECECECECECEDEDEDEDEDEDEEEEEEEEEEEFEFEFEFF0F0F0F0
F1F1F1F2F2F2F3F3F3F4F4F5F5
>
<
0A0B0B0C0C0E0D0E0E0F10111112121313131314141515161516161717181819191B1A1C1C1D1D1F
1E2020212223232525272728292A2B2D2D2E2E2F30313132323333343435353737383839393A3A3C
3C3D3D3F3E4040414142424343444445454646474749484A4A4B4B4C4E4E4F5053535657595A5C5D
5F606363666669696C6C6E6F71727474777779797C7C7F7F8282858588888B8B8E8E919193949697
99999C9C9E9FA1A1A3A4A6A6A8A8AAABADADAFAFB1B1B3B3B4B4B6B6B8B8BABABCBCBFBFC1C1C3C3
C5C5C8C8CACACCCBCDCDCFCFD1
>
<
02020202020202020202020302030303030303030303030303030304030404050506060707070708
0808080909090A0A0A0B0B0B0B0C0C0C0C0D0D0F0F1010111113131414151516161717181819191A
1A1B1B1C1B1D1D1E1E1F1F21212222232324242525262627272828292A2A2B2A2A29282726262524
23232221201F1F1E1D1C1C1B1A191918171716151514141313121211111010100F0F0E0E0D0D0C0C
0C0B0B0A0A0A09090808080707070606060505050505050404040404030303030303020202020202
02020101010101010101010000
>
<
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
13131313131312121212121212121212121111111111111111111111101010101010101010101010
0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C
0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A09090909090909090909090808
08080808080808080807070707070707070707070606060606060606060606050505050505050505
05050404040404040404040404030303030303030303030303020202020202020202020201010101
01010101010101000000000000
>
<
8483838282818180807F7F7E7E7D7D7C7C7B7B7A7A79797878777776767575747473737272717170
706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C
5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4D4D4C4C4B4B4A4A49494848
474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A393938383737363635353434
33333232313130302F2F2E2E2D2D2C2C2B2B2A2A2929282827272626252524242323222221212020
1F1F1E1E1D1D1C1C1B1B1A1A19
>
4 %_Br
[
0.0118 0.0392 0.9098 0 1 0.9608 0 2 50 100 %_Bs
0.0157 0.9608 0.8196 0 0.9882 0 0.098 2 50 50 %_Bs
0.898 0.902 0.0392 0.0078 0.1569 0.0745 0.5176 2 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
F9F9F9F8F8F7F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E7E6E5E4E3E1E0DFDEDDDBDAD9D8D7D5D4D3
D2D1CFCECDCCCBC9C8C7C6C4C3C2C1BFBEBDBBBAB9B8B6B5B4B3B2B1AFAEADACABAAA8A7A6A5A4A3
A2A19F9E9D9C9B9998979695949391908F8E8D8C8B8988878685848382817F7F7D7C7B7A79787675
747371706F6E6D6B6A6968676664636261605E5D5C5B5A5958575554535251504F4D4C4B4A494846
4544434241403E3D3C3B3A39383635343332312F2E2D2C2B2A29282625242322211F1E1D1C1B1A19
18171514131211100F0E0D0C0B0A0908070605030302
>
0.9882
<
050404040404040404040505060607070708080909090A0A0B0B0C0C0C0D0D0D0E0E0E0E0E0E0E0E
0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0C0C0C0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0E
0E0E0E0F0F0F0F10101010101010100F0F0F0F0E0E0E0D0D0C0C0B0A0A0908060605040404040505
0606070708080809090A0A0B0B0C0C0D0D0E0E0E0F0F0F1010101111111111111212121212121212
12121212111111111110101010101010101011111111111111101010101111111111111111111111
11111111101010100F0F0F0E0E0D0D0C0B0B0A090908
>
<
01010101010101010101010101010102020202020202020202020202020202020202020202020202
02020202020201010101010101010101010101010101010101010202020202020202020303030303
03030303030303030303030303030303030303030202020202020202020101010101010101010101
01010102020202020202020202020203030303030303030303030302020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020201010101010101010101010101010000000000
>
<
131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A
3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162
636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A
8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2
B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
DBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010102020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202
>
<
7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7D7D7D
7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D
7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7E7E7E7E7E7E7E7E7E
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F
>
4 %_Br
<
E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E9E9E9EAEAEBECECEDEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F1F1F2F2F3F4F4F4F4F4F3F3F2F2F1F1F1F1F0
F0F0EFEFEFEEEEEEEEEFEFEFEFF0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F3F3F3F3F4F4F4
F5F5F6F6F6F5F5F4F4F4F4F4F4F4F5F4F5F5F5F6F6F6F7F7F7F7F8F8F8F9F9F9F9F9F9F9F9
>
<
14151618191A1B1D1E202123242628292B2C2E2F303233343637393A3B3C3D3F4041424445474849
4B4C4E4F5152545557585A5C5D5F606263656668696B6C6D6E707172747577797B7C7E8082838587
898B8C8E909293959698999B9D9E9FA1A2A4A5A7A8AAACADAFB0B2B3B5B7B8BABBBDBEBFC1C2C4C5
C7C8C9CBCDCFD1D3D5D6D8DADCDEE0E2E4E6E8EAECEDEFF1F2F4F5F7F8F9F9FAFAFAFBFBFC
>
<
090809070806070607060706070605060606070708080809090909090A0A0B0B0B0B0C0C0D0D0D0D
0D0E0D0E0E0E0E0E0E0E0E0E0D0D0D0D0D0C0C0C0C0B0B0A0B0A0909080807080708070807070605
060606060606070607070808090A0A0A0B0B0B0C0C0C0C0D0C0C0D0C0C0C0C0C0C0B0C0B0B0A0A0A
09090808070707080708070607060606060505040404040303030303020202030304040505
>
0.0039
<
01010101010202020202020202030303030303030303040404040404040404050505050505050506
060606060606060607070707070707070708080808080808080909090909090909090A0A0A0A0A0A
0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F
0F0F0F0F0F0F10101010101010101011111111111111111212121212121212121313131313
>
<
9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675
74737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D
4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625
24232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
C4C4C3C3C2C2C1C1C0C0BFBFBEBEBEBDBDBCBCBBBBBABAB9B9B8B8B8B7B7B6B6B5B5B4B4B3B3B2B2
B2B1B1B0B0AFAFAEAEADADACACACABABAAAAA9A9A8A8A7A7A6A6A6A5A5A4A4A3A3A2A2A1A1A0A0A0
9F9F9E9E9D9D9C9C9B9B9A9A9A9999989897979696959594949493939292919190908F8F8E8E8E8D
8D8C8C8B8B8A8A898988888887878686858584848383828282818180807F7F7E7E7D7D7C7C
>
4 %_Br
<
ECECECECECECECECECECECECECECECECECECEBEBECECECECECEBEBEBECECECECECECECECEDEDEEED
EEEEEFEFF0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0EFEFEEEEEDEDEDEDECECECEC
EBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEBEAEAEAEAEBEBEBEAEBEBEBEBEBEBEAEAEAEAEBEBEBEAEAEA
EAEAEAE9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8
>
<
1313131312121212131313121212121212131212121212121211111111121211111111111010100F
0F0F0F0F0F0F0E0E0E0E0E0E0F0E0E0E0E0F0F0F0E0E0F0F0F10100F101010111112121112121212
13131212121313131312121213131313121212121212121111111112121211111111111111101011
11111112111111121212131212121313131413131414
>
<
EFEDECEAE9E8E6E4E3E1DFDEDDDBD9D7D6D4D3D1CFCECCCAC9C7C6C4C2C0BFBDBCBAB8B6B4B3B1B0
AEACABA9A7A6A5A3A19F9E9C9A9997969492908E8E8C8A88868583827F7D7B7977757372706E6C6A
68666563615F5E5C5A5957555352504E4D4B4A4846444342403E3D3B3937363432302F2D2B2A2827
252321201F1E1C1B19181616141312100F0D0D0C0B09
>
<
03030303030303030303030303030302020202020202020202020202020202020202020202010101
01010101010101010101020202020202020202020202020202030302030303030303030303030303
03030303030303030303030303020202020202020202020202020202020201010101010101010101
01010101010101010101010101010101010101010101
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101
>
<
88888888898989898989898A8A8A8A8A8A8A8B8B8B8B8B8B8B8C8C8C8C8C8C8C8D8D8D8D8D8D8D8E
8E8E8E8E8E8E8F8F8F8F8F8F8F909090909090909191919191919192929292929292929393939393
93939494949494949495959595959595969696969696969797979797979798989898989898999999
999999999A9A9A9A9A9A9A9B9B9B9B9B9B9B9C9C9C9C
>
<
3738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E
5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586
8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE
AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4
>
4 %_Br
<
080809090A0A0B0B0C0D0D0E0E0F0F10111212131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9E9FA0
A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C4C5C6C7C8CACB
CCCDCFD0D1D2D3D5D6D7D8D9DADBDCDEDEDFE0E1E2E3E4E5E5E6E7E7E8E9E9EAEAEBEBEBECECECEC
ECEDEDEDEDEDEDEDEDECECECECECECEC
>
<
05050505060506060606060607060707060707070707070707070707070707060606060606060606
06060605050505050405040404040404030403040303030303030303030303030404040404040405
04050505050505050506060506060606060607060707070707070707070707070707070707070707
07070706070607060606060606060605050505050505040504040404040403030303030203030303
03030303030303040404040505050506060606070707070708080808080809080909090909090909
090909090909090A090A0909090909090A090A090A090A090A0A090A090A0A0A0A0A0A0B0B0B0B0C
0B0B0C0C0D0D0E0E0F0F101011111313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F2F3F3F4
F4F5F6F6F7F7F8F9F9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F2F2F1F1F1
F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F0F1F1F1F2F1F2F2F2F3F3F3F4F4F4F5F5F6F6F7
F7F7F8F8F9F9FAFBFAFBFAFAFAF9F8F9F9F7F7F7F7F6F6F5F5F5F5F4F4F4F4F3F3F3F3F3F3F3F3F3
F2F3F3F3F3F3F3F3F4F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F8F8F9F9F9FAFAFAF9F9F9F9FAF9F9
F9F9F9F8F9F8F8F7F8F7F8F7F7F7F7F7F6F7F6F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5
F6F6F6F6F5F5F5F5F5F3F2F2F1F0EFEF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000100010101010101010101
01010101010101010101010101010101000100000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010202020202
02020202020202020202030303030303
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F1F0F0EFEFEEEEEDED
ECECEBEBEAEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDA
DAD9D9D8D8D7D7D6D6D5D5D5D4D4D3D3D2D2D1D1D0D0CFCFCECECECDCDCCCCCBCBCACAC9C9C8C8C7
C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B9B8B8B7B7B6B6B5B5
B4B4B3B3B2B2B2B1B1B0B0AFAFAEAEADADACACABABABAAAAA9A9A8A8A7A7A6A6A5A5A4A4A4A3A3A2
A2A1A1A0A09F9F9E9E9D9D9D9C9C9B9B9A9A9999989897979696969595949493939292919190908F
8F8F8E8E8D8D8C8C8B8B8A8A89898888
>
<
00000001010101020202020203030303030404040405050505050606060606070707070808080808
09090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111
1111121212121313131313141414141415151515161616161617171717181818181819191919191A
1A1A1A1B1B1B1B1B1C1C1C1C1C1D1D1D1D1E1E1E1E1E1F1F1F1F1F20202020212121212122222222
2323232323242424242425252525262626262627272727272828282829292929292A2A2A2A2A2B2B
2B2B2C2C2C2C2C2D2D2D2D2E2E2E2E2E2F2F2F2F2F30303030313131313132323232323333333334
34343434353535353536363636373737
>
4 %_Br
<
03030303040404040404040404040404040505050505050505050606060606060606060606060606
06060606060606060606060606060505050505040404040404040404040404050505050606060606
06070707070707070707070606060606050505050505050505050505050505060606060607070707
07070707070707060606060605050505050505050505050505060606060707070707070707070707
07060606060505050404040404040404040505060606060707070707070707070707060606060505
04040403020202020203030404050506060607070707070707070707070707060606060505040403
03030303030304050506060607070708
>
<
F5F5F4F4F4F4F4F3F3F3F2F2F1F1F0F0EFEFEEEDEDECEBEAEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDB
DAD9D8D7D6D5D4D2D1D0CFCECDCBCAC9C8C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6B6A696867666564636261605F5E
5D5C5B5A595857565655545251504F4E4D4C4B4A4948464544434241403F3E3D3C3B3A3A39383736
353434333231302F2E2D2B2A2928272524232221201F1E1D1C1B1A19181716151413121211100F0F
0E0D0C0C0B0A0A090808070706060505
>
0.9137
0
1
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
4 %_Br
[
0.0078 0.9882 0.0314 0 0.9412 0.0078 0.498 2 50 100 %_Bs
0.9765 0.9882 0.0196 0.0039 0.0745 0 0.4863 2 50 80 %_Bs
0.9098 0.0784 0.0353 0.0039 0.0039 0.6118 0.7686 2 50 60 %_Bs
0.9255 0.0745 0.9373 0.0118 0 0.5333 0.2157 2 50 40 %_Bs
0.0314 0.0196 0.9137 0 1 1 0 2 50 20 %_Bs
0.0118 0.9608 0.9137 0 1 0 0 2 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 Xa
([Passermarken]) Pc
1 g
(Neues Farbfeld 30) Pc
0.9 g
(Neues Farbfeld 21) Pc
0.8 g
(Neues Farbfeld 22) Pc
0.7 g
(Neues Farbfeld 23) Pc
0.6 g
(Neues Farbfeld 24) Pc
0.5 g
(Neues Farbfeld 25) Pc
0.4 g
(Neues Farbfeld 26) Pc
0.3 g
(Neues Farbfeld 27) Pc
0.2 g
(Neues Farbfeld 28) Pc
0.1 g
(Neues Farbfeld 29) Pc
0 g
(Neues Farbfeld 2) Pc
1 1 0.8784 Xa
(Neues Farbfeld 31) Pc
1 1 0.7529 Xa
(Neues Farbfeld 1) Pc
1 1 0.502 Xa
(Neues Farbfeld 3) Pc
1 1 0 Xa
(Neues Farbfeld 4) Pc
1 0.7529 0 Xa
(Neues Farbfeld 35) Pc
1 0.6471 0 Xa
(Neues Farbfeld 32) Pc
1 0.502 0 Xa
(Neues Farbfeld 5) Pc
1 0 0 Xa
(Neues Farbfeld 6) Pc
1 0 0.502 Xa
(Neues Farbfeld 7) Pc
1 0 1 Xa
(Neues Farbfeld 8) Pc
0.502 0 1 Xa
(Neues Farbfeld 9) Pc
0.502 0 0.502 Xa
(Neues Farbfeld 10) Pc
0 0 0.502 Xa
(Neues Farbfeld 11) Pc
0 0 0.7529 Xa
(Neues Farbfeld 39) Pc
0 0 1 Xa
(Neues Farbfeld 12) Pc
0 0.502 1 Xa
(Neues Farbfeld 13) Pc
0 0.6275 1 Xa
(Neues Farbfeld 33) Pc
0 0.7529 1 Xa
(Neues Farbfeld 38) Pc
0 1 1 Xa
(Neues Farbfeld 14) Pc
0.502 1 1 Xa
(Neues Farbfeld 15) Pc
0.6784 0.8471 0.902 Xa
(Neues Farbfeld 34) Pc
0.502 1 0.502 Xa
(Neues Farbfeld 16) Pc
0 1 0.502 Xa
(Neues Farbfeld 17) Pc
0.502 1 0 Xa
(Neues Farbfeld 18) Pc
0 1 0 Xa
(Neues Farbfeld 19) Pc
0 0.502 0 Xa
(Neues Farbfeld 20) Pc
0.0353 0.1098 0.3529 Xa
(Uni blue) Pc
0.9412 0.3333 0.1333 Xa
(Uni orange) Pc
0.8235 0.8235 0.8235 Xa
(Uni gray) Pc
0.702 0.7294 0.8078 Xa
(Uni bue-grey) Pc
0.9843 0.8 0.1882 Xa
(Uni yellow) Pc
0.3922 0.7216 0.1961 Xa
(Uni green) Pc
Bb
2 (Black, White) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White) Pc
Bb
2 (Steel Bar) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Steel Bar) Pc
Bb
2 (Orange, Green, Violet) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Orange, Green, Violet) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
2 (Pink, Yellow, Green ) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Pink, Yellow, Green ) Pc
Bb
2 (Green, Blue) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Green, Blue) Pc
Bb
2 (Purple, Red, Yellow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Purple, Red, Yellow) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Ebene 1) Ln
0 A
1 A
uu0 To
1 0 0 1 79.3701 746.9302 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
0 J 0 j 1 w 4 M []0 d0 XR
%_ 0 50 XQ
/_Helvetica 8 7.448 -1.7999 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(Bro) Tx 1 15 Tk
(wser / User) Tx 1 0 Tk
(\r) TX 
TO
uu1 Ap
1 1 1 Xa
0 R
0 0 0 XA
0.75 w145.645 756.9473 m
145.645 755.8828 144.7817 755.0195 143.7173 755.0195 c
142.6528 755.0195 141.7896 755.8828 141.7896 756.9473 c
141.7896 758.0117 142.6528 758.875 143.7173 758.875 c
144.7817 758.875 145.645 758.0117 145.645 756.9473 c
bU0 Ap
139.8618 744.0957 m
143.7173 748.5938 l
147.5718 744.0957 l
S143.7173 748.5938 m
143.7173 755.0195 l
S148.5366 754.6982 m
143.7173 752.6426 l
138.8979 754.6982 l
S/BBAccumRotation (3.141593) XT
U0 To
1 0 0 1 192.0728 746.9302 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
1 w(W) Tx 1 30 Tk
(eb Ser) Tx 1 -30 Tk
(v) Tx 1 25 Tk
(er) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 268.6079 746.9302 0 Tp
0 Tv
TP
0 Tr
(Compute Ser) Tx 1 -30 Tk
(v) Tx 1 25 Tk
(er i) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 352.9136 746.9302 0 Tp
0 Tv
TP
0 Tr
(Compute Ser) Tx 1 -30 Tk
(v) Tx 1 25 Tk
(er j) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 437.9536 746.9302 0 Tp
0 Tv
TP
0 Tr
(Compute Ser) Tx 1 -30 Tk
(v) Tx 1 25 Tk
(er k) Tx 1 0 Tk
(\r) TX 
TO
1 Ap
0 R
0.5 G
0.75 w510.2368 300.4727 m
56.6931 300.4727 L
56.6931 765.3557 L
510.2368 765.3557 L
510.2368 300.4727 L
s0 Ap
56.6931 323.1499 m
510.2368 323.1499 l
S170.0791 765.3557 m
170.0791 323.1504 l
S425.1973 765.3557 m
425.1973 323.1499 l
S340.1582 765.3557 m
340.1582 323.1499 l
S255.1187 765.3557 m
255.1187 323.1494 l
S56.6931 737.009 m
510.2368 737.009 l
SU1 Ap
0 0 0 XA
528.0205 323.3374 m
528.0205 310.7617 520.6563 300.4731 511.6543 300.4731 c
56.0513 300.4731 l
47.0493 300.4731 39.6851 310.7617 39.6851 323.3374 c
39.6855 759.4993 l
39.6855 772.075 47.0503 782.3633 56.0522 782.3633 c
511.6543 782.3633 l
520.6563 782.3633 528.0205 772.075 528.0205 759.4993 c
528.0205 323.3374 l
sU0 A
u0 O
0.9843 0.8 0.1882 Xa
0 G
317.333 708.6628 m
317.333 703.1833 312.9385 698.741 307.5166 698.741 C
281.7949 698.741 L
276.373 698.741 271.9785 703.1833 271.9785 708.6628 C
271.9785 708.6628 L
271.9785 714.1423 276.373 718.5837 281.7949 718.5837 C
307.5166 718.5837 L
312.9385 718.5837 317.333 714.1423 317.333 708.6628 C
317.333 708.6628 L
b/BBAccumRotation (0.000000) XT
0 To
1 0 0 1 294.6563 706.1912 0 Tp
0 Tv
TP
-17.5419 0 Td
0 Tr
0 0 0 Xa
1 w/_Helvetica 7 6.517 -1.5749 Tf
1 Ta
(Con) Tx 1 20 Tk
(v) Tx 1 25 Tk
(ersion) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (0.000000) XT
Uuu0 Ap
0 0.7529 1 Xa
0 R
0 0 0 XA
0.75 w229.6064 447.9312 m
229.6064 417.2476 l
189.9214 417.2476 l
189.9214 447.9312 l
229.6064 447.9312 l
b/BBAccumRotation (0.000000) XT
Uu0 To
1 0 0 1 209.7637 438.6187 0 Tp
0 Tv
TP
-16.3868 0 Td
0 Tr
0 0 0 Xa
1 w(Plagiar) Tx 1 -15 Tk
(ism\r) Tx 1 0 Tk
1.0183 -8.5 Td
(document\r) Tx 1 0 Tk
5.8381 -8.5 Td
(model) Tx 1 0 Tk
(\r) TX 
TO
UU0 To
1 0 0 1 92.647 453.6001 0 Tp
0 Tv
TP
0 Tr
0 g
0 Ta
([ne) Tx 1 20 Tk
(w result]) Tx 1 0 Tk
(\r) TX 
TO
u1 Ap
1 g
0 R
0 G
0.75 w164.8271 323.2979 m
164.8271 319.8301 162.0156 317.0186 158.5479 317.0186 c
155.0801 317.0186 152.2686 319.8301 152.2686 323.2979 c
152.2686 326.7656 155.0801 329.5771 158.5479 329.5771 c
162.0156 329.5771 164.8271 326.7656 164.8271 323.2979 c
bu0.2 g
1 w161.2119 323.2979 m
161.2119 321.8271 160.0186 320.6348 158.5469 320.6348 c
157.0771 320.6348 155.8838 321.8271 155.8838 323.2979 c
155.8838 324.7695 157.0771 325.9619 158.5469 325.9619 c
160.0186 325.9619 161.2119 324.7695 161.2119 323.2979 c
fUUu0.9843 0.8 0.1882 Xa
0 R
0 G
0.75 w105.2036 643.3003 m
105.2036 625.1177 L
87.3779 625.1177 L
87.3779 649.3613 L
99.2617 649.3613 L
105.2036 643.3003 L
b0 Ap
0.3 g
1 w99.2617 649.3613 m
99.2617 643.3003 l
105.2036 643.3003 l
99.2617 649.3613 l
fU0 To
1 0 0 1 74.7207 660.0474 0 Tp
0 Tv
TP
0 Tr
0 0 0 Xa
(Suspicious\r) Tx 1 0 Tk
0 -8.5 Td
(document) Tx 1 0 Tk
(\r) TX 
TO
uu1 Ap
0.2 g
70.6738 708.1885 m
70.6738 706.7173 69.481 705.5244 68.0093 705.5244 c
66.5391 705.5244 65.3462 706.7173 65.3462 708.1885 c
65.3462 709.6592 66.5391 710.8521 68.0093 710.8521 c
69.481 710.8521 70.6738 709.6592 70.6738 708.1885 c
fUu0 Ap
0 R
0 0 0 XA
0.75 w67.8391 708.1919 m
178.2876 708.1919 l
S/BBAccumRotation (3.141593) XT
0 O
0 0 0 Xa
1 w180.0591 708.9614 m
178.8188 709.3354 178.0122 709.6802 177.0181 710.0796 c
177.0181 706.2964 l
177.3735 706.4653 178.8188 707.0405 180.0591 707.4155 c
181.3862 707.8159 182.5894 708.0903 183.3696 708.188 c
182.5894 708.2856 181.3862 708.5601 180.0591 708.9614 c
f/BBAccumRotation (3.141593) XT
UUu1 Ap
1 g
0 R
0 G
0.75 w125.3931 590.1045 m
125.3931 584.625 120.9985 580.1826 115.5776 580.1826 C
95.5254 580.1826 L
90.1035 580.1826 85.709 584.625 85.709 590.1045 C
85.709 590.1045 L
85.709 595.584 90.1035 600.0254 95.5254 600.0254 C
115.5776 600.0254 L
120.9985 600.0254 125.3931 595.584 125.3931 590.1045 C
125.3931 590.1045 L
b0 To
1 0 0 1 105.5518 587.6328 0 Tp
0 Tv
TP
-11.0879 0 Td
0 Tr
0 0 0 Xa
1 w1 Ta
(Upload) Tx 1 0 Tk
(\r) TX 
TO
U0 To
1 0 0 1 93.3965 712.9146 0 Tp
0 Tv
TP
-18.6759 0 Td
0 Tr
(picapica.net) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 Ap
0.9843 0.8 0.1882 Xa
0 R
0 0 0 XA
0.75 w226.772 647.0269 m
226.772 627.4521 l
192.7563 627.4521 l
192.7563 647.0269 l
226.772 647.0269 l
b/BBAccumRotation (0.000000) XT
0 To
1 0 0 1 210.4731 634.7681 0 Tp
0 Tv
TP
-5.6384 0 Td
0 Tr
0 0 0 Xa
1 w(File) Tx 1 0 Tk
(\r) TX 
TO
Uu1 Ap
1 g
0 R
0 G
0.75 w232.2939 708.6624 m
232.2939 703.1829 227.8994 698.741 222.4775 698.741 C
196.7559 698.741 L
191.334 698.741 186.9395 703.1829 186.9395 708.6624 C
186.9395 708.6624 L
186.9395 714.1418 191.334 718.5837 196.7559 718.5837 C
222.4775 718.5837 L
227.8994 718.5837 232.2939 714.1418 232.2939 708.6624 C
232.2939 708.6624 L
b0 To
1 0 0 1 209.6167 710.4414 0 Tp
0 Tv
TP
-11.0879 0 Td
0 Tr
0 0 0 Xa
1 w(Handle\r) Tx 1 0 Tk
-5.8381 -8.5 Td
(connection) Tx 1 0 Tk
(\r) TX 
TO
Uu0 Ap
0 R
0 G
0.75 w209.6167 698.741 m
209.6167 680.3159 l
138.812 680.3159 l
S0 O
0 g
1 w137.0405 679.5471 m
138.2808 679.1726 139.0864 678.8274 140.0806 678.4285 c
140.0806 682.2117 l
139.7251 682.0427 138.2808 681.4673 137.0405 681.093 c
135.7134 680.6921 134.5093 680.4177 133.729 680.3201 c
134.5093 680.2222 135.7134 679.948 137.0405 679.5471 c
fUu1 Ap
1 g
0 R
0 G
0.75 w119.5757 531.4966 m
119.5757 526.0171 115.1812 521.5757 109.7603 521.5757 C
89.708 521.5757 L
84.2861 521.5757 79.8916 526.0171 79.8916 531.4966 C
79.8916 531.4966 L
79.8916 536.9761 84.2861 541.4185 89.708 541.4185 C
109.7603 541.4185 L
115.1812 541.4185 119.5757 536.9761 119.5757 531.4966 C
119.5757 531.4966 L
b0 To
1 0 0 1 99.7334 533.2759 0 Tp
0 Tv
TP
-6.8074 0 Td
0 Tr
0 0 0 Xa
1 w(Ajax\r) Tx 1 0 Tk
-3.3074 -8.5 Td
(polling) Tx 1 0 Tk
(\r) TX 
TO
U0 Ap
1 1 1 Xa
0 R
0 0 0 XA
0.75 w114.2422 481.5737 m
107.8047 475.479 l
102.0508 481.5737 l
108.1475 487.6694 l
114.2422 481.5737 l
b/BBAccumRotation (3.141593) XT
u107.8154 521.8774 m
107.8154 493.9805 l
B0 0 0 Xa
1 w108.585 492.209 m
108.959 493.4492 109.3047 494.2549 109.7031 495.25 c
105.9199 495.25 l
106.0889 494.8936 106.6641 493.4492 107.0391 492.209 c
107.4395 490.8818 107.7139 489.6787 107.8115 488.8984 c
107.9092 489.6787 108.1836 490.8818 108.585 492.209 c
fUuu0 R
0 0 0 XA
0.75 w102.1514 481.8115 m
91.2305 481.8115 l
91.2305 515.0752 l
S0 O
0 0 0 Xa
1 w90.4619 516.8467 m
90.0874 515.6064 89.7417 514.8008 89.3433 513.8066 c
93.1265 513.8066 l
92.957 514.1621 92.3818 515.6064 92.0068 516.8467 c
91.6064 518.1738 91.332 519.377 91.2344 520.1582 c
91.1367 519.377 90.8623 518.1738 90.4619 516.8467 c
fUUu1 Ap
1 g
0 R
0 G
0.75 w127.6636 432.3403 m
127.6636 426.8608 123.269 422.4185 117.8481 422.4185 C
97.7954 422.4185 L
92.374 422.4185 87.9795 426.8608 87.9795 432.3403 C
87.9795 432.3403 L
87.9795 437.8198 92.374 442.2612 97.7954 442.2612 C
117.8481 442.2612 L
123.269 442.2612 127.6636 437.8198 127.6636 432.3403 C
127.6636 432.3403 L
b0 To
1 0 0 1 107.8208 434.1187 0 Tp
0 Tv
TP
-11.2839 0 Td
0 Tr
0 0 0 Xa
1 w(Update\r) Tx 1 0 Tk
5.061 -8.5 Td
(GUI) Tx 1 0 Tk
(\r) TX 
TO
Uu0 Ap
1 1 1 Xa
0 R
0 0 0 XA
0.75 w107.8164 475.8364 m
107.8164 447.9312 l
B0 0 0 Xa
1 w108.585 446.1597 m
108.959 447.3999 109.3047 448.2056 109.7031 449.2007 c
105.9199 449.2007 l
106.0889 448.8442 106.665 447.3999 107.0391 446.1597 c
107.4395 444.8325 107.7139 443.6294 107.8115 442.8491 c
107.9102 443.6294 108.1836 444.8325 108.585 446.1597 c
fUu0 R
0 0 0 XA
0.75 w87.9785 432.3403 m
67.8838 432.3403 l
67.8838 680.3157 l
86.0742 680.3157 l
S0 O
0 0 0 Xa
1 w87.8457 681.0845 m
86.606 681.459 85.7998 681.804 84.8052 682.2031 c
84.8052 678.4199 l
85.1611 678.5889 86.606 679.1643 87.8457 679.5386 c
89.1729 679.9395 90.3765 680.2139 91.1567 680.3115 c
90.3765 680.4094 89.1729 680.6836 87.8457 681.0845 c
fU0 To
1 0 0 1 82.7256 474.4185 0 Tp
0 Tv
TP
0 Tr
0 g
0 Ta
([else]) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 124.5767 482.9224 0 Tp
0 Tv
TP
0 Tr
([analysis\r) Tx 1 0 Tk
0 -8.5 Td
( finished]) Tx 1 0 Tk
(\r) TX 
TO
u0 R
0 G
0.75 w158.7188 334.4888 m
158.7188 481.3579 l
113.0552 481.3579 l
S0 O
0 g
1 w159.4873 334.2822 m
159.8613 335.5225 160.207 336.3281 160.6055 337.3232 c
156.8223 337.3232 l
156.9922 336.9668 157.5674 335.5225 157.9414 334.2822 c
158.3428 332.9551 158.6162 331.752 158.7148 330.9717 c
158.8125 331.752 159.0869 332.9551 159.4873 334.2822 c
fUu0 R
0 0 0 XA
0.75 w189.9214 432.3403 m
134.8984 432.3403 l
S0 O
0 0 0 Xa
1 w133.127 431.5718 m
134.3672 431.1968 135.1729 430.8521 136.1675 430.4526 c
136.1675 434.2358 l
135.8115 434.0669 134.3672 433.4917 133.127 433.1177 c
131.7998 432.7163 130.5967 432.4419 129.8159 432.3442 c
130.5967 432.2466 131.7998 431.9722 133.127 431.5718 c
fUuu0.9843 0.8 0.1882 Xa
0 R
0 0 0 XA
0.75 w314.4985 646.9119 m
314.4985 627.5671 l
274.8135 627.5671 l
274.8135 646.9119 l
314.4985 646.9119 l
b/BBAccumRotation (0.000000) XT
Uu0 To
1 0 0 1 294.6558 639.0183 0 Tp
0 Tv
TP
-15.9494 0 Td
0 Tr
0 0 0 Xa
1 w1 Ta
(Document\r) Tx 1 0 Tk
6.419 -8.5 Td
(model) Tx 1 0 Tk
(\r) TX 
TO
UUuu1 g
0 R
0 0 0 XA
0.75 w131.5767 690.2373 m
131.5767 670.8921 l
91.8916 670.8921 l
91.8916 690.2373 l
131.5767 690.2373 l
b/BBAccumRotation (0.000000) XT
Uu0 To
1 0 0 1 111.7339 678.0938 0 Tp
0 Tv
TP
-6.2229 0 Td
0 Tr
0 0 0 Xa
1 w(GUI) Tx 1 0 Tk
(\r) TX 
TO
UUu0 R
0 0 0 XA
0.75 w294.6597 698.741 m
294.6597 652.7996 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w295.4292 651.0281 m
295.8032 652.2683 296.1479 653.075 296.5474 654.0691 c
292.7642 654.0691 l
292.9331 653.7136 293.5083 652.2683 293.8833 651.0281 c
294.2837 649.7009 294.5581 648.4978 294.6558 647.7175 c
294.7534 648.4978 295.0278 649.7009 295.4292 651.0281 c
f/BBAccumRotation (1.570797) XT
Uu1 Ap
0 0.7529 1 Xa
0 R
0 G
0.75 w311.5029 532.2319 m
311.5029 526.7524 307.1084 522.3101 301.6865 522.3101 C
275.9648 522.3101 L
270.543 522.3101 266.1484 526.7524 266.1484 532.2319 C
266.1484 532.2319 L
266.1484 537.7114 270.543 542.1528 275.9648 542.1528 C
301.6865 542.1528 L
307.1084 542.1528 311.5029 537.7114 311.5029 532.2319 C
311.5029 532.2319 L
b0 To
1 0 0 1 288.8257 534.0112 0 Tp
0 Tv
TP
-7.7804 0 Td
0 Tr
0 0 0 Xa
1 w(Style\r) Tx 1 0 Tk
-4.8615 -8.5 Td
(analysis) Tx 1 0 Tk
(\r) TX 
TO
Uu0 Ap
0 R
0 0 0 XA
0.75 w236.8413 441.3423 m
288.9863 441.3423 l
288.9863 522.3101 l
S0 O
0 0 0 Xa
1 w235.0698 440.5737 m
236.3101 440.1987 237.1157 439.854 238.1104 439.4546 c
238.1104 443.2378 l
237.7544 443.0688 236.3101 442.4937 235.0698 442.1187 c
233.7427 441.7183 232.5396 441.4438 231.7588 441.3462 c
232.5396 441.2485 233.7427 440.9741 235.0698 440.5737 c
fUuu0 R
0 0 0 XA
0.75 w227.3594 637.7964 m
243.6323 637.7964 l
243.6323 708.1919 l
265.3184 708.1919 l
S/BBAccumRotation (3.141593) XT
0 O
0 0 0 Xa
1 w267.0898 708.9604 m
265.8496 709.3354 265.0439 709.6802 264.0488 710.0796 c
264.0488 706.2964 l
264.4053 706.4653 265.8496 707.0405 267.0898 707.4146 c
268.417 707.8159 269.6201 708.0903 270.4004 708.188 c
269.6201 708.2856 268.417 708.5601 267.0898 708.9604 c
fUUu1 Ap
1 g
0 R
0 G
0.75 w405.2075 708.6628 m
405.2075 703.1833 400.813 698.741 395.3911 698.741 C
369.6694 698.741 L
364.2476 698.741 359.853 703.1833 359.853 708.6628 C
359.853 708.6628 L
359.853 714.1423 364.2476 718.5837 369.6694 718.5837 C
395.3911 718.5837 L
400.813 718.5837 405.2075 714.1423 405.2075 708.6628 C
405.2075 708.6628 L
b0 To
1 0 0 1 382.5303 710.4421 0 Tp
0 Tv
TP
-13.37 0 Td
0 Tr
0 0 0 Xa
1 w(K) Tx 1 40 Tk
(e) Tx 1 20 Tk
(yw) Tx 1 10 Tk
(ord\r) Tx 1 0 Tk
-1.6625 -8.5 Td
(e) Tx 1 30 Tk
(xtr) Tx 1 10 Tk
(action) Tx 1 0 Tk
(\r) TX 
TO
Uu0 Ap
1 g
0 R
0 0 0 XA
0.75 w399.5381 678.8987 m
399.5381 659.324 l
365.5225 659.324 l
365.5225 678.8987 l
399.5381 678.8987 l
b/BBAccumRotation (0.000000) XT
0 To
1 0 0 1 382.5303 666.6404 0 Tp
0 Tv
TP
-15.12 0 Td
0 Tr
0 0 0 Xa
1 w(K) Tx 1 40 Tk
(e) Tx 1 20 Tk
(yw) Tx 1 10 Tk
(ords) Tx 1 0 Tk
(\r) TX 
TO
Uu0 R
0 0 0 XA
0.75 w382.5342 698.7412 m
382.5342 686.1331 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w383.3037 684.3616 m
383.6777 685.6018 384.0225 686.4084 384.4219 687.4026 c
380.6387 687.4026 l
380.8076 687.0471 381.3828 685.6018 381.7578 684.3616 c
382.1582 683.0344 382.4326 681.8313 382.5303 681.051 c
382.6279 681.8313 382.9023 683.0344 383.3037 684.3616 c
f/BBAccumRotation (1.570797) XT
Uu1 Ap
1 g
0 R
0 G
0.75 w405.2075 629.2932 m
405.2075 623.8137 400.813 619.3711 395.3911 619.3711 C
369.6694 619.3711 L
364.2476 619.3711 359.853 623.8137 359.853 629.2932 C
359.853 629.2932 L
359.853 634.7725 364.2476 639.2139 369.6694 639.2139 C
395.3911 639.2139 L
400.813 639.2139 405.2075 634.7725 405.2075 629.2932 C
405.2075 629.2932 L
b0 To
1 0 0 1 382.5303 631.0723 0 Tp
0 Tv
TP
-7.091 0 Td
0 Tr
0 0 0 Xa
1 w(W) Tx 1 30 Tk
(eb\r) Tx 1 0 Tk
-3.4125 -8.5 Td
(search) Tx 1 0 Tk
(\r) TX 
TO
Uuu0 Ap
1 g
0 R
0 0 0 XA
0.75 w402.3726 599.5283 m
402.3726 580.1826 l
362.6875 580.1826 l
362.6875 599.5283 l
402.3726 599.5283 l
b/BBAccumRotation (0.000000) XT
Uu0 To
1 0 0 1 382.5298 591.6348 0 Tp
0 Tv
TP
-16.0404 0 Td
0 Tr
0 0 0 Xa
1 w(Ref) Tx 1 30 Tk
(erence\r) Tx 1 0 Tk
7.2905 -8.5 Td
(URLs) Tx 1 0 Tk
(\r) TX 
TO
UU1 Ap
0.2 g
394.2866 564.0957 m
372.6089 564.0957 L
372.6089 566.4277 L
394.2866 566.4277 L
394.2866 564.0957 L
f/BBAccumRotation (1.570797) XT
u0 Ap
0 R
0 0 0 XA
0.75 w382.5342 579.686 m
382.5342 572.0122 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w383.3037 570.2407 m
383.6777 571.481 384.0225 572.2876 384.4219 573.2817 c
380.6387 573.2817 l
380.8076 572.9263 381.3828 571.481 381.7578 570.2407 c
382.1582 568.9136 382.4326 567.7104 382.5303 566.9302 c
382.6279 567.7104 382.9023 568.9136 383.3037 570.2407 c
f/BBAccumRotation (1.570797) XT
Uu1 Ap
1 g
0 R
0 G
0.75 w396.7031 531.4976 m
396.7031 526.0181 392.3086 521.5757 386.8877 521.5757 C
366.835 521.5757 L
361.4131 521.5757 357.0186 526.0181 357.0186 531.4976 C
357.0186 531.4976 L
357.0186 536.9771 361.4131 541.4185 366.835 541.4185 C
386.8877 541.4185 L
392.3086 541.4185 396.7031 536.9771 396.7031 531.4976 C
396.7031 531.4976 L
b0 To
1 0 0 1 376.8613 529.0259 0 Tp
0 Tv
TP
-15.5083 0 Td
0 Tr
0 0 0 Xa
1 w(Do) Tx 1 15 Tk
(wnload) Tx 1 0 Tk
(\r) TX 
TO
Uu0 Ap
0 R
0 0 0 XA
0.75 w376.3901 564.4136 m
376.3901 548.2354 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w377.1597 546.4639 m
377.5337 547.7041 377.8784 548.5107 378.2778 549.5049 c
374.4946 549.5049 l
374.6636 549.1494 375.2388 547.7041 375.6138 546.4639 c
376.0142 545.1367 376.2886 543.9336 376.3862 543.1533 c
376.4839 543.9336 376.7583 545.1367 377.1597 546.4639 c
f/BBAccumRotation (1.570797) XT
Uuu0 R
0 0 0 XA
0.75 w389.6167 565.0957 m
389.6167 556.5913 l
468.5166 556.5913 l
468.5166 548.2354 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w469.2852 546.4639 m
469.6602 547.7041 470.0049 548.5098 470.4043 549.5049 c
466.6211 549.5049 l
466.79 549.1484 467.3652 547.7041 467.7393 546.4639 c
468.1406 545.1367 468.415 543.9336 468.5127 543.1533 c
468.6104 543.9336 468.8848 545.1367 469.2852 546.4639 c
fUUu0.3922 0.7216 0.1961 Xa
0 R
0 0 0 XA
0.75 w393.8687 503.1504 m
393.8687 483.5757 l
359.853 483.5757 l
359.853 503.1504 l
393.8687 503.1504 l
b/BBAccumRotation (0.000000) XT
0 To
1 0 0 1 377.5698 490.8916 0 Tp
0 Tv
TP
-5.6384 0 Td
0 Tr
0 0 0 Xa
1 w(File) Tx 1 0 Tk
(\r) TX 
TO
Uu1 Ap
0.3922 0.7216 0.1961 Xa
0 R
0 G
0.75 w399.5381 453.5444 m
399.5381 448.0649 395.1436 443.6226 389.7217 443.6226 C
364 443.6226 L
358.5781 443.6226 354.1836 448.0649 354.1836 453.5444 C
354.1836 453.5444 L
354.1836 459.0239 358.5781 463.4653 364 463.4653 C
389.7217 463.4653 L
395.1436 463.4653 399.5381 459.0239 399.5381 453.5444 C
399.5381 453.5444 L
b/BBAccumRotation (0.000000) XT
0 To
1 0 0 1 376.8613 451.0728 0 Tp
0 Tv
TP
-17.5419 0 Td
0 Tr
0 0 0 Xa
1 w(Con) Tx 1 20 Tk
(v) Tx 1 25 Tk
(ersion) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (0.000000) XT
Uu0 Ap
0 R
0 0 0 XA
0.75 w376.8647 521.7817 m
376.8647 509.1738 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w377.6343 507.4023 m
378.0083 508.6426 378.353 509.4492 378.7524 510.4434 c
374.9692 510.4434 l
375.1382 510.0879 375.7134 508.6426 376.0884 507.4023 c
376.4888 506.0752 376.7632 504.8721 376.8608 504.0918 c
376.9585 504.8721 377.2329 506.0752 377.6343 507.4023 c
f/BBAccumRotation (1.570797) XT
Uu0 R
0 0 0 XA
0.75 w382.5342 619.2231 m
382.5342 606.6152 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w383.3037 604.8438 m
383.6777 606.084 384.0225 606.8906 384.4219 607.8848 c
380.6387 607.8848 l
380.8076 607.5293 381.3828 606.084 381.7578 604.8438 c
382.1582 603.5166 382.4326 602.3135 382.5303 601.5332 c
382.6279 602.3135 382.9023 603.5166 383.3037 604.8438 c
f/BBAccumRotation (1.570797) XT
Uu0 R
0 0 0 XA
0.75 w382.5342 659.2622 m
382.5342 646.6543 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w383.3037 644.8828 m
383.6777 646.123 384.0225 646.9297 384.4219 647.9238 c
380.6387 647.9238 l
380.8076 647.5684 381.3828 646.123 381.7578 644.8828 c
382.1582 643.5557 382.4326 642.3525 382.5303 641.5723 c
382.6279 642.3525 382.9023 643.5557 383.3037 644.8828 c
f/BBAccumRotation (1.570797) XT
Uu0 R
0 0 0 XA
0.75 w376.8647 483.5132 m
376.8647 470.9058 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w377.6343 469.1343 m
378.0083 470.3745 378.353 471.1812 378.7524 472.1753 c
374.9692 472.1753 l
375.1382 471.8198 375.7134 470.3745 376.0884 469.1343 c
376.4888 467.8071 376.7632 466.604 376.8608 465.8237 c
376.9585 466.604 377.2329 467.8071 377.6343 469.1343 c
f/BBAccumRotation (1.570797) XT
Uu0 R
0 0 0 XA
0.75 w376.8647 443.6226 m
376.8647 431.0142 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w377.6343 429.2427 m
378.0083 430.4829 378.353 431.2896 378.7524 432.2837 c
374.9692 432.2837 l
375.1382 431.9282 375.7134 430.4829 376.0884 429.2427 c
376.4888 427.9155 376.7632 426.7124 376.8608 425.9321 c
376.9585 426.7124 377.2329 427.9155 377.6343 429.2427 c
f/BBAccumRotation (1.570797) XT
Uuu0.3922 0.7216 0.1961 Xa
0 R
0 0 0 XA
0.75 w396.7031 423.2822 m
396.7031 403.9375 l
357.0181 403.9375 l
357.0181 423.2822 l
396.7031 423.2822 l
b/BBAccumRotation (0.000000) XT
Uu0 To
1 0 0 1 376.8604 415.3887 0 Tp
0 Tv
TP
-15.9494 0 Td
0 Tr
0 0 0 Xa
1 w(Document\r) Tx 1 0 Tk
6.419 -8.5 Td
(model) Tx 1 0 Tk
(\r) TX 
TO
UUu1 Ap
1 g
0 R
0 G
0.75 w487.4116 531.4976 m
487.4116 526.0181 483.0171 521.5757 477.5962 521.5757 C
457.5435 521.5757 L
452.1216 521.5757 447.7271 526.0181 447.7271 531.4976 C
447.7271 531.4976 L
447.7271 536.9771 452.1216 541.4185 457.5435 541.4185 C
477.5962 541.4185 L
483.0171 541.4185 487.4116 536.9771 487.4116 531.4976 C
487.4116 531.4976 L
b0 To
1 0 0 1 467.5698 529.0259 0 Tp
0 Tv
TP
-15.5083 0 Td
0 Tr
0 0 0 Xa
1 w(Do) Tx 1 15 Tk
(wnload) Tx 1 0 Tk
(\r) TX 
TO
Uu0 Ap
0.3922 0.7216 0.1961 Xa
0 R
0 0 0 XA
0.75 w484.5771 503.1504 m
484.5771 483.5762 l
450.5615 483.5762 l
450.5615 503.1504 l
484.5771 503.1504 l
b/BBAccumRotation (0.000000) XT
0 To
1 0 0 1 468.2783 490.8916 0 Tp
0 Tv
TP
-5.6384 0 Td
0 Tr
0 0 0 Xa
1 w(File) Tx 1 0 Tk
(\r) TX 
TO
Uu1 Ap
0.3922 0.7216 0.1961 Xa
0 R
0 G
0.75 w490.2466 453.5449 m
490.2466 448.0654 485.8521 443.623 480.4302 443.623 C
454.7085 443.623 L
449.2866 443.623 444.8921 448.0654 444.8921 453.5449 C
444.8921 453.5449 L
444.8921 459.0244 449.2866 463.4658 454.7085 463.4658 C
480.4302 463.4658 L
485.8521 463.4658 490.2466 459.0244 490.2466 453.5449 C
490.2466 453.5449 L
b/BBAccumRotation (0.000000) XT
0 To
1 0 0 1 467.5698 451.0732 0 Tp
0 Tv
TP
-17.5419 0 Td
0 Tr
0 0 0 Xa
1 w(Con) Tx 1 20 Tk
(v) Tx 1 25 Tk
(ersion) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (0.000000) XT
Uu0 Ap
0 R
0 0 0 XA
0.75 w467.5732 521.7822 m
467.5732 509.1743 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w468.3428 507.4023 m
468.7168 508.6426 469.0615 509.4497 469.4609 510.4438 c
465.6777 510.4438 l
465.8467 510.0884 466.4219 508.6426 466.7969 507.4023 c
467.1973 506.0752 467.4717 504.8721 467.5693 504.0918 c
467.667 504.8721 467.9414 506.0752 468.3428 507.4023 c
f/BBAccumRotation (1.570797) XT
Uu0 R
0 0 0 XA
0.75 w467.5732 483.5137 m
467.5732 470.9063 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w468.3428 469.1348 m
468.7168 470.375 469.0615 471.1816 469.4609 472.1758 c
465.6777 472.1758 l
465.8467 471.8203 466.4219 470.375 466.7969 469.1348 c
467.1973 467.8076 467.4717 466.6045 467.5693 465.8242 c
467.667 466.6045 467.9414 467.8076 468.3428 469.1348 c
f/BBAccumRotation (1.570797) XT
Uu0 R
0 0 0 XA
0.75 w467.5732 443.623 m
467.5732 431.0146 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w468.3428 429.2432 m
468.7168 430.4834 469.0615 431.29 469.4609 432.2842 c
465.6777 432.2842 l
465.8467 431.9287 466.4219 430.4834 466.7969 429.2432 c
467.1973 427.916 467.4717 426.7129 467.5693 425.9326 c
467.667 426.7129 467.9414 427.916 468.3428 429.2432 c
f/BBAccumRotation (1.570797) XT
Uuu0.3922 0.7216 0.1961 Xa
0 R
0 0 0 XA
0.75 w487.4116 423.2822 m
487.4116 403.9375 l
447.7266 403.9375 l
447.7266 423.2822 l
487.4116 423.2822 l
b/BBAccumRotation (0.000000) XT
Uu0 To
1 0 0 1 467.5688 415.3887 0 Tp
0 Tv
TP
-15.9494 0 Td
0 Tr
0 0 0 Xa
1 w(Document\r) Tx 1 0 Tk
6.419 -8.5 Td
(model) Tx 1 0 Tk
(\r) TX 
TO
UUu1 Ap
0 0.7529 1 Xa
0 R
0 G
0.75 w399.5381 374.1743 m
399.5381 368.6948 395.1436 364.2524 389.7217 364.2524 C
364 364.2524 L
358.5781 364.2524 354.1836 368.6948 354.1836 374.1743 C
354.1836 374.1743 L
354.1836 379.6538 358.5781 384.0952 364 384.0952 C
389.7217 384.0952 L
395.1436 384.0952 399.5381 379.6538 399.5381 374.1743 C
399.5381 374.1743 L
b/BBAccumRotation (0.000000) XT
0 To
1 0 0 1 376.8613 371.7026 0 Tp
0 Tv
TP
-18.9173 0 Td
0 Tr
0 0 0 Xa
1 w(Compar) Tx 1 -15 Tk
(ison) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (0.000000) XT
Uu0 Ap
0 R
0 0 0 XA
0.75 w385.8428 404.1431 m
385.8428 391.5356 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w386.6123 389.7642 m
386.9863 391.0044 387.3311 391.811 387.7305 392.8052 c
383.9473 392.8052 l
384.1162 392.4497 384.6914 391.0044 385.0664 389.7642 c
385.4668 388.437 385.7412 387.2339 385.8389 386.4536 c
385.9365 387.2339 386.2109 388.437 386.6123 389.7642 c
f/BBAccumRotation (1.570797) XT
Uu1 Ap
0 0.7529 1 Xa
0 R
0 G
0.75 w490.2466 374.1743 m
490.2466 368.6948 485.8521 364.2524 480.4302 364.2524 C
454.7085 364.2524 L
449.2866 364.2524 444.8921 368.6948 444.8921 374.1743 C
444.8921 374.1743 L
444.8921 379.6538 449.2866 384.0952 454.7085 384.0952 C
480.4302 384.0952 L
485.8521 384.0952 490.2466 379.6538 490.2466 374.1743 C
490.2466 374.1743 L
b/BBAccumRotation (0.000000) XT
0 To
1 0 0 1 467.5698 371.7026 0 Tp
0 Tv
TP
-18.9173 0 Td
0 Tr
0 0 0 Xa
1 w(Compar) Tx 1 -15 Tk
(ison) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (0.000000) XT
Uu0 Ap
0 R
0 0 0 XA
0.75 w476.5518 404.1431 m
476.5518 391.5356 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w477.3213 389.7642 m
477.6953 391.0044 478.04 391.811 478.4395 392.8052 c
474.6563 392.8052 l
474.8252 392.4497 475.4004 391.0044 475.7754 389.7642 c
476.1758 388.437 476.4502 387.2339 476.5479 386.4536 c
476.6455 387.2339 476.9199 388.437 477.3213 389.7642 c
f/BBAccumRotation (1.570797) XT
U1 Ap
0.2 g
306.751 564.0957 m
285.0732 564.0957 L
285.0732 566.4277 L
306.751 566.4277 L
306.751 564.0957 L
f/BBAccumRotation (1.570797) XT
u0 Ap
0 R
0 0 0 XA
0.75 w294.9985 626.708 m
294.9985 573.4292 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w295.7681 571.6577 m
296.1421 572.8979 296.4868 573.7046 296.8862 574.6987 c
293.103 574.6987 l
293.272 574.3433 293.8472 572.8979 294.2222 571.6577 c
294.6226 570.3306 294.897 569.1274 294.9946 568.3472 c
295.0923 569.1274 295.3667 570.3306 295.7681 571.6577 c
f/BBAccumRotation (1.570797) XT
Uu0 R
0 G
0.75 w328.8193 708.1919 m
328.8193 396.8511 l
459.0654 396.8511 l
459.0654 391.1812 l
S0 O
0 g
1 w459.834 389.4097 m
460.2085 390.6499 460.5537 391.4556 460.9526 392.4507 c
457.1694 392.4507 l
457.3389 392.0942 457.9141 390.6499 458.2886 389.4097 c
458.6895 388.0825 458.9634 386.8794 459.0615 386.0991 c
459.1592 386.8794 459.4336 388.0825 459.834 389.4097 c
fUu0 R
0 0 0 XA
0.75 w368.835 396.8511 m
368.835 391.3301 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w369.6045 389.5586 m
369.9785 390.7988 370.3232 391.6055 370.7227 392.5996 c
366.9395 392.5996 l
367.1084 392.2441 367.6836 390.7988 368.0586 389.5586 c
368.459 388.2314 368.7334 387.0283 368.8311 386.248 c
368.9287 387.0283 369.2031 388.2314 369.6045 389.5586 c
f/BBAccumRotation (1.570797) XT
Uu0 R
0 0 0 XA
0.75 w376.8608 364.2529 m
376.8608 357.166 l
277.7959 357.166 l
277.7959 433.3086 l
236.8413 433.3086 l
S0 O
0 0 0 Xa
1 w235.0698 432.54 m
236.3101 432.165 237.1157 431.8203 238.1104 431.4209 c
238.1104 435.2041 l
237.7544 435.0352 236.3101 434.46 235.0698 434.085 c
233.7427 433.6846 232.5396 433.4102 231.7588 433.3125 c
232.5396 433.2148 233.7427 432.9404 235.0698 432.54 c
fUu0 R
0 0 0 XA
0.75 w467.5693 363.835 m
467.5693 345.8271 l
266.457 345.8271 l
266.457 424.8037 l
236.8413 424.8037 l
S0 O
0 0 0 Xa
1 w235.0698 424.0352 m
236.3101 423.6611 237.1157 423.3154 238.1104 422.917 c
238.1104 426.7002 l
237.7544 426.5303 236.3101 425.9551 235.0698 425.5811 c
233.7427 425.1797 232.5396 424.9063 231.7588 424.8076 c
232.5396 424.71 233.7427 424.4355 235.0698 424.0352 c
fU1 Ap
0.2 g
116.8896 564.0957 m
95.2119 564.0957 L
95.2119 566.4277 L
116.8896 566.4277 L
116.8896 564.0957 L
f/BBAccumRotation (1.570797) XT
u0 Ap
0 R
0 0 0 XA
0.75 w105.1372 579.6865 m
105.1372 572.0127 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w105.9067 570.2412 m
106.2808 571.4814 106.6255 572.2881 107.0249 573.2822 c
103.2417 573.2822 l
103.4106 572.9268 103.9858 571.4814 104.3608 570.2412 c
104.7612 568.9141 105.0356 567.7109 105.1333 566.9307 c
105.231 567.7109 105.5054 568.9141 105.9067 570.2412 c
f/BBAccumRotation (1.570797) XT
Uu0 R
0 0 0 XA
0.75 w98.9932 564.4136 m
98.9932 548.2354 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w99.7627 546.4639 m
100.1367 547.7041 100.4814 548.5107 100.8809 549.5049 c
97.0977 549.5049 l
97.2666 549.1494 97.8418 547.7041 98.2168 546.4639 c
98.6172 545.1367 98.8916 543.9336 98.9893 543.1533 c
99.0869 543.9336 99.3613 545.1367 99.7627 546.4639 c
f/BBAccumRotation (1.570797) XT
Uuuu0 R
0 0 0 XA
0.75 w113.2197 564.0957 m
113.2197 555.5913 l
158.7402 555.5913 l
158.7402 637.7964 l
187.0869 637.7964 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w188.8584 638.5649 m
187.6182 638.9397 186.812 639.2847 185.8179 639.6838 c
185.8179 635.9004 l
186.1733 636.0698 187.6182 636.645 188.8584 637.0193 c
190.1855 637.4204 191.3887 637.6946 192.1694 637.7925 c
191.3887 637.8901 190.1855 638.1646 188.8584 638.5649 c
fUUUuu0 R
0 0 0 XA
0.75 w354.1836 708.1919 m
328.8193 708.1919 l
S/BBAccumRotation (3.141593) XT
0 O
0 0 0 Xa
1 w355.9551 708.9604 m
354.7148 709.3354 353.9092 709.6802 352.9141 710.0796 c
352.9141 706.2964 l
353.2705 706.4653 354.7148 707.0405 355.9551 707.4146 c
357.2822 707.8159 358.4854 708.0903 359.2656 708.188 c
358.4854 708.2856 357.2822 708.5601 355.9551 708.9604 c
fUUuu0 R
0 0 0 XA
0.75 w328.8193 555.5913 m
302.999 555.5913 l
302.999 565.5127 l
S/BBAccumRotation (3.141593) XT
UUu0 G
113 671 m
113 606 l
S0 O
0 g
1 w113.7686 604.2285 m
114.1431 605.4688 114.4883 606.2744 114.8872 607.2695 c
111.104 607.2695 l
111.2734 606.9131 111.8486 605.4688 112.2227 604.2285 c
112.624 602.9014 112.8979 601.6982 112.9961 600.918 c
113.0938 601.6982 113.3682 602.9014 113.7686 604.2285 c
fUu0 R
0 G
0.75 w95.5 625.5 m
95.5 606 l
S0 O
0 g
1 w96.2686 604.2285 m
96.6431 605.4688 96.9883 606.2744 97.3872 607.2695 c
93.604 607.2695 l
93.7734 606.9131 94.3486 605.4688 94.7227 604.2285 c
95.124 602.9014 95.3979 601.6982 95.4961 600.918 c
95.5938 601.6982 95.8682 602.9014 96.2686 604.2285 c
fUu0 R
0 G
0.75 w68 532.5 m
74.5 532.5 l
S0 O
0 g
1 w76.2715 533.2686 m
75.0313 533.6436 74.2253 533.9883 73.2307 534.3877 c
73.2307 530.604 l
73.5867 530.7734 75.0313 531.3486 76.2715 531.7227 c
77.5986 532.124 78.8018 532.3984 79.5823 532.4961 c
78.8018 532.5938 77.5986 532.8682 76.2715 533.2686 c
fUu0 R
0 0 0 XA
0.75 w289.2788 564.4141 m
289.2788 548.2354 l
S/BBAccumRotation (1.570797) XT
0 O
0 0 0 Xa
1 w290.0483 546.4639 m
290.4224 547.7041 290.7671 548.5107 291.1665 549.5049 c
287.3833 549.5049 l
287.5522 549.1494 288.1274 547.7041 288.5024 546.4639 c
288.9028 545.1367 289.1772 543.9336 289.2749 543.1533 c
289.3726 543.9336 289.647 545.1367 290.0483 546.4639 c
f/BBAccumRotation (1.570797) XT
ULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
