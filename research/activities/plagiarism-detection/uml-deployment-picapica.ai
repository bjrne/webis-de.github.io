%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 7.0
%%AI8_CreatorVersion: 9.0
%%For: (Fakult\344t Medien) (Bauhaus-Universit\344t Weimar)
%%Title: (server-architecture.ai)
%%CreationDate: 2/28/2007 12:40 PM
%%BoundingBox: 76 187 541 523
%%HiResBoundingBox: 76.708 187.9575 540.959 522.7339
%%DocumentProcessColors: Black
%%DocumentFonts: Myriad-Roman
%%+ Myriad-Italic
%%DocumentNeededFonts: Myriad-Roman
%%+ Myriad-Italic
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 421.5 296.7754 421.5 296.7754
%AI3_TileBox: 14 12 583 817
%AI3_DocumentPreview: None
%AI5_ArtSize: 841.8896 595.2754
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -298.5 824.7754 1 1272 959 26 0 1 67 96 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:14 12
%%AI3_PaperRect:-13 823 582 -19
%%AI3_Margin:13 -18 -13 19
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 128 92 8
%%BeginData: 9566 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD11FFFD17A87DA8FD11FF7DFD15A87D7DFD3DFFA8FD16FFA8A8A8
%FD10FFA8FD15FFA8A87DFD3CFFA8FD17FFA8FF7DFD0FFFA8FD16FFA8FFA8
%FD3BFFA8A8FD16FF7DFFFFA8FD0EFF7DFD16FFA8FFFF7DFD52FFA8FFFFFF
%A8FD0DFF7DFD17A8FFFFFFA8FD3AFFA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87D7DFFFFFFA8FD0DFFA8FD16FF7DFFFFFF7DFD3AFFA8
%FFA8A87DA8A8A87DFF7DFD0DFFA8FFFFFFA8FD0DFF7DFF7DFF52A8A8A87D
%A8A8FD0CFFA8FFFFFFA8FD3AFFA8FFA8FD067DA8A8FD0DFFA8FFFFFFA8FD
%0DFFA8FF7DA8A8527D7DA87DA8FD0CFF7DFFFFFF7DFD3AFFA8FD17FFA8FF
%FFFFA8FD0DFFA8FD16FFA8FFFFFFA8FD3AFFA8FD17FFA8FFFFFFA8FD0DFF
%A8FFFFFFA87DA87DA87DA87DA87DA87DA87DA87DA8FFFF7DFFFFFF7DFD3A
%FF7DFFFFFF7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DFFFFFF7DFFFFFF7D
%FD0DFFA8FFFFFFA8FD0FFFA8FFFFA8FFFFFFA8FD3AFFA8FFA87D7D7DA87D
%FD0CFFA8FFFFFFA8FFFFFFA8FD04FF52527DA8FD05FFA87DA87DA87D7DFD
%0DFFA8FFFF7DFFFFFF7DFD3AFFA8FFA8FD04FFA8FFFF52FD04A8FFA8A8A8
%FFA8FFFFFFA8FFFFFFA8FD0DFFA8A8FD04FFA8FFFFA87D7DA8A87DA8A8FF
%A8FFA8FFFFA8FFFFFFA8FD3AFFA8FFA87D7D7DA87DFFFF52FD067D52A8FF
%A8FFFFFFA8FFFFFFA8FD0DFFA8A8A87D7D7DA8FFFFFD047D52FD047DFFFF
%A8FFFF7DFFFFFF7DFD3AFFA8FF7DA87DA87DA8FD0CFFA8FFFFFFA8FFFFFF
%7DFD0DFF7DA8A8A87DA87DFD0DFF7DFFFFA8FFFFFFA8FD3AFFA8FFA8FD04
%FF7DFD0CFFA8FFFFFFA8FFFF7DFD0EFFA87DFD04FFA8FD0DFFA8FFFF7DFF
%FFA8FD3BFFA8FFA8A87DA8A8A8FD0CFFA8FFFFFFA8FFA8FD0FFFA8FFA8A8
%7DA8A8FD0DFFA8FFFFA8FD3EFFA8FD04FF7DA87DA87DA87DA87DA87D7D7D
%A87DA8FFFFFFA8A8A8FD0FFFA8FFFFFFA87DA87DA87DA87DA87DA87DA87D
%A87DA8FFFF7DFFA8FD3CFF7DFD0FFF7DFD07FF7DA8FD10FFA8FD0AFFA8FD
%0BFFA8A8FD3DFFA87DA87DA87DA87DA87DA87DA87DA87D7D7DA87DA87DA8
%7D7DFD11FF7D7DA87DA87DA87DA87DA852A87DA87DA87DA87DA87DA852FD
%4EFFA8FD24FFA8FD5AFFA8FD24FF7DFD5AFFA8FFFD05A87D7DFD04A8FD0D
%FFA8A8FFA8A8A87DFD05A8FD5AFFA8FFA87DA87D7D7DA87DFF7D7DA8FD0C
%FF7D7DFF7D7D7DA87DFF7D7D7DFD5AFFA8FD24FFA8FD5AFFA87DA87DA87D
%A87DA87DA87DA8A8FD0BFF7DA87DA87DA87DA87DA87DA87DFD67FFA8FD0B
%FFA8FD73FF7DFD0BFF7DFD73FFA8FD0BFFA8FD27FFFD21A87DFD22FF7DA8
%7DA87DA87DA852A87DA87DA87DA87DA87DA852A87DA87DA87DA87DA87DA8
%7D7D52FD17FFA8A8FD20FFA87DFD21FFA8FD08FFA8FD0BFFA8FD0CFFA8A8
%FD16FFA8A8FD20FFA8FF7DFD20FFA8FD09FF7DFD0BFF7DFD0BFFA8FF7DFD
%15FFA8A8FD20FFA8FFFFA8FD1FFFA8FD0AFFA8FD0BFFA8FD0AFFA8FFFFA8
%FD14FFA8FD25FFA8FD1EFFA8FD0BFF7DFD0BFF7DFD09FF7DFFFFFF7DFD13
%FFA8FD21FFA8A8FFFFFFA8FD1DFFA8FD0CFFA8FD0BFFA8FD08FFA8FD04FF
%A8FD12FFA8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8FD04FFA8FD1CFF52A87DA87DA87DA87DA87DA87D
%A852A87DA87DA87DA87DA87DA852A87DA87DA87DA852FD05FF7DFD12FFA8
%FD22FF7DFD04FFA8FD1CFFFD05A87DFD04A8FFA8FFFFA8FD0BFFA8FD07FF
%A8FD05FFA8FD12FFA8FF7DFD07A87DA8FFA87DFFA8A87DFFA8FD0EFFA8FD
%04FFA8FD1CFF7DA87D7D527D527D527D7DA8FFFF7DFD0BFF7DFD07FF7DFD
%05FF7DFD12FFA8FF7D7DA852FD057D52A87DA87DA8525252A8FD0EFF7DFD
%04FFA8FD1CFFA8FD0DFFA8FD0BFFA8FD07FFA8FD05FFA8FD12FF7DFD09FF
%A8FFFFFFA8FD14FFA8FD04FF7DFD1CFF7DFD0DFF7DFD0BFF7DFD07FF7DFD
%05FF7DFD12FFA8FD22FF7DFD04FFA8FD1CFFA8FD0CFFA8A8A8FD09FFA8A8
%A8FD06FFA8FD05FFA8FD12FFA8FD22FFA8FD04FFA8FD1CFF7DFD09FF7DA8
%7D52F8277DA87DA87DA87DA87D27F852A8FD05FF7DFD05FF7DFD12FFA8FD
%0AFF7DA87DA87DA87DA87DA87DA87DA87DA87D7DFD06FF7DFD04FFA8FD1C
%FFA8FD09FFA8FFFFA827A8FD09FF7D27FFA8FD05FFA8FD05FFA8FD04FFA8
%FFA8FF7DA87DA8A8A8FD04FFA8FD0AFFA8FD10FFA8FD06FFA8FD04FFA8FD
%1CFF7DFD06FFA87DA87DA87DFFA8FFA8A87DA8A87DA87DA8FFA8FF7DFD05
%FF7DFD05FF7DFFFFFF7D7DA87DA8FD047DA87DA8FFFFFFA8FD06FFA87D7D
%A87DA87DFF7D7DA87DA87DFD04A87D7DFFA8FD06FF7DFD04FFA8FD1CFFA8
%FD06FFA8FD04FFA8FD04FF7D7DA8A87D7D7DFD04FFA8FD05FFA8FD05FFA8
%FD12FFA8FD06FF527DFD05A8FFA8FD057DA87DA8A87D7DFFA8FD06FFA8FD
%04FFA8FD1CFF7DFD06FFA87DA87DA8A8FD0FFF7DA87DA87DA852A87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7D7DA87DA87DA827277D
%FF7DFD10FFA8FD06FF7DFD04FFA8FD1CFFA8FD06FF7DA8A8A87DA8FFFF7D
%A8A8A87DFD06A8FFFFA8FD05FFA8FD05FFA8FD12FF7DFD06FF7D7DA8A8A8
%7DA8FFFF7DA8A8A87DFD06A8FF7DFD06FFA8FD04FF7DFD1CFF7DFD06FFA8
%FD04FF7DFFA8A8FD047D527D7D7D52A8FFFF7DFD05FF7DFD05FF7DFD12FF
%A8FD07FF7D7DA87DA87DFFFF7D7D52FD047D52A8527DFFA8FD06FF7DFD04
%FF7DFD1CFFA8FD06FFA8A8A87DA8FD10FFA8FD05FFA8FD04FFA8FD13FFA8
%FD0AFFA8FFFFA852FD0CFFA8FD06FFA8FFFFFFA8FD1DFF7DFD09FF7DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DFD05FF7DFFFFFFA8FD14FFA8FD0A
%FF7DA87D27F87D7DA87DA87DA87DA87DA87D7DFD06FF7DFFFFA8FD1EFFA8
%FD0DFFA8FD0BFFA8FD07FFA8FFFFA8FD15FFA8FD0DFF52527DFD12FFA8FF
%A8A8FD1EFF7DFD0DFF7DFD0BFF7DFD07FF7DFFA8A8FD15FFA8FD0EFF7DFD
%13FF7DA8A8FD1FFFA8FD0DFFA8FD0BFFA8FD07FFA8A8FD17FFA8FD0EFFA8
%FD13FFA8A8FD20FF7DA87DA87DA87DA87DA87DA87DA852A87DA87DA87DA8
%7DA87DA852A87DA87DA87DA852A8FD18FF7DA87DA87DA87DA87DA87DA87D
%A852A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DFD2FFFA8FD0BFFA8
%FD2FFFA8FD43FF7DFD0BFF7DFD2FFF7DFD43FFA8FD0BFFA8FD2FFFA8FD36
%FFA87DA87DA87DA87DA87DA87DA8A8FD0BFF7DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87D7DFD1CFF7DFD36FF7DFFFD04A87DFF7D7DA8A8A8FD11FF
%A8A8FFA87DA87D7DFFA8A8FFFFFF7DFD1CFFA8FD36FFA8A87D7DA852A8FF
%A87DA87DA8FD11FF7D7DFF52A8FFA87DFF7D7DFFFFFFA8FD1CFF7DFD36FF
%A8FD2BFFA8FD1CFFA8FD36FFA8FD2BFFA8FD1CFF7DFD36FFA8FD1DFFFD04
%A87DA8A8A87DA8A8A87DA87DA87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D
%A8A8FD08FFA8FD1FFF7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87D7D7DA87DA87DA87DA87D7D7DFD11FFA8A8FD0DFFA8FD12FFA8A8FD08
%FF7DFD1EFFA8FD17FFA8FD09FFA8A8FD10FFA8FD0FFFA8FD11FFA8FFA8FD
%08FFA8FD1DFFA8FD18FFA8FD08FFA8FF7DFD0FFFA8FD10FFA8FD10FFA8A8
%FFA8FD08FF7DFD1CFFA8FD19FF7DFD07FFA8FFFFA8FD0EFFA8FD11FF7DFD
%0FFFA8FFFFFF7DFD08FFA8FD1AFFA8A8FD1AFFA8FD06FFA8FFFFFF7DFD0D
%FFA8FD12FFA8FD0EFFA8A8FFFFFFA8FD08FF7DFD1AFFA8FD1BFFA8FD05FF
%A8FD04FFA8FD0CFFA8FD13FFA8FD0DFFA8FD05FFA8FD08FFA8FD19FF7DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8525252A8
%7DA87DFD05FF7DFD0CFF7D7DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%27277D7DA87DA87DA87DA87DA87D7DFD05FFA8FD08FF7DFD19FFA8FD10FF
%A8A87DA8A8A87DA8A8A87D52F852A8FFFFA8FD05FFA8FD0CFFA8FD10FF7D
%7DA827277DA8A8A87DA8A8A87DA8FFFF7DFD05FFA8FD08FFA8FD19FF7DFD
%0DFF7DA87DA87DA8FFFFA87D7DA87DA8FF27A8A8FFFF7DFD05FF7DFD0CFF
%A8FF7DA8A87DFD04A87DA8FFFFA87DA87DA87DA8A8FF7D7DA87D7DFFFFFF
%7DFFFFA8FD05FFA8FD08FF7DFD19FFA8FF7DA8A8A8FF7DA8FFA8FFFFFFA8
%FD04FFA8FFFFFF7D7D527D7DFFFFFFA8FFFFA8FD05FFA8FD0CFFA8FF7D7D
%7DA87D7D7DFF7DA8FFFFA8FD04FFA8FFFFFFFD057DFFFFFFA8FFFFA8FD05
%FFA8FD08FFA8FFA8A8FF7DFD04A8FFA8A8FD0DFF7DFF7D5252A852527DFF
%7DFFFFFF7DA87DA87DA8FD0BFFA8FFFF7DFD05FF7DFD0CFFA8FD0DFFA87D
%A87DA8A8FD0BFF7DFFFFA8FD05FFA8FD08FF7DFF7DA8A87D7DA8527DA8A8
%7DFD0DFFA8FD0DFFA8A8A87DA8A8FD0BFFA8FFFFA8FD05FFA8FD04FF527D
%A87DFD04FF7DFD0DFFA8A87DA8A87DFD0BFFA8FFFFA8FD05FF7DFD08FFA8
%FD19FF7DFD0DFF7DFD04FFA8FFFF7DFD05A87DFFFFA8FFFF7DFD05FF7DFD
%0CFFA8FD0DFFA8FD04FF7DFFFF7DA8A87DFD04A8FF7DFFFFA8FD05FFA8FD
%08FF7DFD19FFA8FD0DFFFD06A8FFFF7D527D7DA852A8FFFFA8FFFFA8FD05
%FFA8FD0CFFA8FD0DFFA8A8A87DA8A8FFFFA87D7DA87D7D7DFFFFA8FFFFA8
%FD05FFA8FD08FFA8FD19FF7DFD0FFF7DFD0BFFA8277DA8FFFF7DFD05FF7D
%FD0CFFA8FD10FF52A87DA87DA87DA87DA87DA87DA87DFFFFA8FD05FFA8FD
%08FF7DFD19FFA8FD10FFA8A87DA8A8A87DA8A8A87D52F827A8FFFFA8FD05
%FFA8FD0CFFA8FD21FF7DFD05FFA8FD08FFA8FD19FF7DFD08FFA87DA87DA8
%7DA87DA87DA87DA87DA852FFFFFFA87D7DFFFFFF7DFD05FF7DFD0CFFA8FD
%09FF7D7DA87DA87DA87DA87DA87DA87DA87DFD08FFA8FD05FFA8FD08FF7D
%FD19FFA8FD06FFA8A87DA8A8A8FFFD04A87DFD04A8FFA8FD04FFA8FD04FF
%A8FD05FFA8FD0CFFA8FD07FFA8A87DA87DFF7DFD04A87DA8A8A8FFFFA8FD
%08FFA8FD05FFA8FD08FFA8FD19FF7DFD06FFA8FD04FF7DFF7DA8527D7DA8
%A8A87DA87DFD04FFA8FD04FF7DFD05FF7DFD0CFFA8FD06FF7DFD04FFA8FF
%7D7DA87D7D7DA87D7D7DFF7DFD08FFA8FD04FFA8A8FD08FF7DFD19FFA8FD
%06FF7DA87DA8A8A8FD06FFA8FD04FFA8FD04FF7DFD04FFA8FD04FFA8FFA8
%A8FFA852FF7D7DA8A8FFFF7DFD06FFA87DA87DA87DFD0CFFA8FD08FFA8FD
%04FFA8FD09FFA8FD19FF7DFD06FFA87D7D7DA87DFD0BFF7DFD04FFA8FD04
%FF7DFFFFFF7DFFA87D7DFF52A8FFA87DA87DA8FFA8FD06FFA8A8FD047DFF
%FF7DA87DFD05A8FFFF7DFD08FFA8FFFFFFA8FD0AFF7DFD19FFA8FD06FFA8
%FD04FFA8FFFF7DFFFD05A8FFFFA8FD04FF7DFD04A87DA8A87DFD0FA87DFD
%07A8FD04FFA8FFFFFF7D7DA87D7DA8A8FFFFA8FD08FFA8FFFFA8FD0BFFA8
%FD19FF7DFD06FFA87DA87DA87DFFFFA8527D7D7D527DFFFF7DFD09FF7DFF
%A8FD10FFA8FD06FFA8A8FD047DFD0CFF7DFD08FFA8FFA8FD0CFF7DFD19FF
%A8FD08FFA8FD0DFFA8A8FD09FFA8A8FD11FFA8FD09FF7DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A8FD08FF7DA8FD0DFFA8FD19FF7DFD09FF7DA87DA87DA8
%7DA87DA87DA87D7D7DFD09FF7DA8FD11FFA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA852A87DA87DA87DA87DA87D7DA8FD0DFF7DFD19FF
%FD17A87DFD0BA8FD29FFA8FD19FFA8FD30FFA8FD34FF7DFD19FF7DFD30FF
%A8FD34FFA8FD19FFA8FD30FFA8FD34FF7DFD19FF7DFD18FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Myriad-Roman
%%IncludeFont: Myriad-Italic
userdict /_useSmoothShade false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Myriad-Roman Myriad-Roman
[/_Myriad-Roman/Myriad-Roman 0 0 1 TZ%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Myriad-Italic Myriad-Italic
[/_Myriad-Italic/Myriad-Italic 0 0 1 TZ%AI3_EndEncoding AdobeType
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([Passermarken]) Pc
1 1 1 1 k
([Passermarken]) Pc
([Passermarken]) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Ebene 1) Ln
0 A
u0 R
0 0 0 1 K
0 J 0 j 0.75 w 4 M [1 1 ]0 d0 XR
185.4841 430.0562 m
231.2695 430.0562 L
SUu273.292 430.0562 m
319.0776 430.0562 L
SUu279.564 358.5552 m
419.4292 358.5552 L
SUu0 O
0 0 0 1 k
1 w []0 d418.6831 353.8501 m
426.8086 358.5405 L
418.6831 363.231 L
418.6831 353.8501 L
fU0 R
0 0 0 1 K
0.75 w [1 1 ]0 d447.6533 188.5845 m
159.769 188.5845 L
S296.5737 216.2051 m
183.3647 216.2051 L
S354.8276 189.8389 m
354.8276 208.0278 L
S160.3962 187.9575 m
160.3962 207.4004 L
S0 To
1 0 0 1 276.6367 434.2383 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
1 w []0 d%_ 0 50 XQ
/_Myriad-Roman 8.7808 7.2968 -2.1952 Tf
0 Ts
100 100 Tz
-200 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
8.1536 0 Tl
-1.7562 Tc
0 Tw
(<) Tx 1 0 Tk
0 Tt
0 Tc
(< HT) Tx 1 -38 Tk
(TP ) Tx 1 0 Tk
-200 Tt
-1.7562 Tc
(>>) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 R
0 0 0 1 K
0.75 w [1 1 ]0 d230.8521 428.8008 m
230.8521 376.7437 L
S0 O
0 0 0 1 k
1 w []0 d226.147 374.3535 m
230.8374 366.2285 L
235.5278 374.3535 L
226.147 374.3535 L
fU0 R
0 0 0 1 K
0.75 w [1 1 ]0 d183.812 314.0234 m
183.812 272.6284 L
S0 O
0 0 0 1 k
1 w []0 d179.1069 270.2388 m
183.7974 262.1138 L
188.488 270.2388 L
179.1069 270.2388 L
f0 R
0 0 0 1 K
0.75 w [1 1 ]0 d345.002 314.0244 m
345.002 273.8828 L
S0 O
0 0 0 1 k
1 w []0 d340.2969 271.4932 m
344.9873 263.3682 L
349.6777 271.4932 L
340.2969 271.4932 L
fu0 R
0 0 0 1 K
0.75 w [1 1 ]0 d273.5015 430.0562 m
273.5015 376.7437 L
SUu0 O
0 0 0 1 k
1 w []0 d268.7964 374.3535 m
273.4868 366.2285 L
278.1772 374.3535 L
268.7964 374.3535 L
fU0 R
0 0 0 1 K
0.75 w [1 1 ]0 d185.2754 459.4443 m
185.2754 430.0562 L
S0 O
0 0 0 1 k
1 w []0 d188.9351 235.9214 m
184.2446 244.0469 L
179.554 235.9214 L
188.9351 235.9214 L
f0 R
0 0 0 1 K
0.75 w [1 1 ]0 d184.021 236.249 m
184.021 216.7446 L
S0 O
0 0 0 1 k
1 w []0 d452.3584 340.2476 m
447.668 348.373 L
442.9775 340.2476 L
452.3584 340.2476 L
f0 R
0 0 0 1 K
0.75 w [1 1 ]0 d447.4443 340.5752 m
447.4443 188.5845 L
S230.4336 342.457 m
230.4336 313.397 L
S273.292 342.8755 m
273.292 313.8154 L
Su319.4961 459.8472 m
319.4961 430.0562 L
SU0 To
1 0 0 1 242.3506 479.814 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
1 w []0 d/_Myriad-Roman 22.5791 18.7631 -5.6448 Tf
0 Tt
24.4607 0 Tl
0 Tc
(...) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
0 To
1 0 0 1 239.8418 249.6323 0 Tp
0 Tv
TP
0 Tr
(...) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 To
1 0 0 1 252.5947 359.8096 0 Tp
0 Tv
TP
-14.5457 0 Td
0 Tr
/_Myriad-Roman 10.0352 8.3392 -2.5088 Tf
1 Ta
0 0 Tl
(S) Tx 1 -6 Tk
(er) Tx 1 -25 Tk
(vlet\r) Tx 1 0 Tk
-6.0111 -12.0352 Td
(C) Tx 1 13 Tk
(on) Tx 1 4 Tk
(tainer) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 R
0 0 0 1 K
0.75 w280.1914 342.248 m
215.1714 342.248 L
215.1714 370.4722 L
280.1914 370.4722 L
280.1914 342.248 L
su0 O
0 0 0 0 k
223.8975 358.8691 m
204.9272 358.8691 L
204.9272 365.4546 L
223.8975 365.4546 L
223.8975 358.8691 L
b224.1538 347.8931 m
205.1836 347.8931 L
205.1836 354.4785 L
224.1538 354.4785 L
224.1538 347.8931 L
bUUUu0 To
1 0 0 1 469.605 361.064 0 Tp
0 Tv
TP
-20.7675 0 Td
0 Tr
0 0 0 1 k
1 w(R) Tx 1 -3 Tk
(ela) Tx 1 4 Tk
(tional\r) Tx 1 0 Tk
1.1841 -12.0352 Td
(D) Tx 1 2 Tk
(a) Tx 1 4 Tk
(tabase) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 R
0 0 0 1 K
0.75 w497.2021 343.5024 m
432.1821 343.5024 L
432.1821 371.7266 L
497.2021 371.7266 L
497.2021 343.5024 L
su0 O
0 0 0 0 k
440.9082 360.1235 m
421.938 360.1235 L
421.938 366.709 L
440.9082 366.709 L
440.9082 360.1235 L
b441.1646 349.1475 m
422.1943 349.1475 L
422.1943 355.7329 L
441.1646 355.7329 L
441.1646 349.1475 L
bUUUuu361.6016 451.4854 m
276.7417 451.4854 L
276.7417 504.6406 L
361.6016 504.6406 L
361.6016 451.4854 L
s292.688 522.3589 m
375.8389 522.3589 L
S375.8389 522.3589 m
375.8389 469.8599 L
S292.688 522.3589 m
276.7417 504.6406 L
S375.8389 522.3589 m
361.6016 504.6406 L
S375.8389 469.8599 m
361.6016 451.4854 L
SU0 To
1 0 0 1 283.6406 493.5078 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
1 w0 Ta
(C) Tx 1 3 Tk
(lien) Tx 1 4 Tk
(t ) Tx 1 0 Tk
/_Myriad-Italic 10.0352 8.3392 -2.5088 Tf
(n) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 R
0 0 0 1 K
0.75 w349.8101 460.1616 m
291.7944 460.1616 L
291.7944 486.6084 L
349.8101 486.6084 L
349.8101 460.1616 L
s0 To
1 0 0 1 309.356 470.9287 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
1 w/_Myriad-Roman 10.0352 8.3392 -2.5088 Tf
(B) Tx 1 -1 Tk
(r) Tx 1 6 Tk
(o) Tx 1 7 Tk
(w) Tx 1 2 Tk
(ser) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 0 0 0 k
0 R
0 0 0 1 K
0.75 w301.043 474.9009 m
282.0728 474.9009 L
282.0728 481.4863 L
301.043 481.4863 L
301.043 474.9009 L
b301.2993 463.9248 m
282.3291 463.9248 L
282.3291 470.5103 L
301.2993 470.5103 L
301.2993 463.9248 L
bUUUuu211.7012 450.8584 m
126.8411 450.8584 L
126.8411 504.0132 L
211.7012 504.0132 L
211.7012 450.8584 L
s142.7876 521.7317 m
225.9385 521.7317 L
S225.9385 521.7317 m
225.9385 469.2324 L
S142.7876 521.7317 m
126.8411 504.0132 L
S225.9385 521.7317 m
211.7012 504.0132 L
S225.9385 469.2324 m
211.7012 450.8584 L
SU0 To
1 0 0 1 133.7402 492.8804 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
1 w(C) Tx 1 3 Tk
(lien) Tx 1 4 Tk
(t 1) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 R
0 0 0 1 K
0.75 w199.9097 459.5342 m
141.894 459.5342 L
141.894 485.9814 L
199.9097 485.9814 L
199.9097 459.5342 L
s0 To
1 0 0 1 159.4556 470.3013 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
1 w(B) Tx 1 -1 Tk
(r) Tx 1 6 Tk
(o) Tx 1 7 Tk
(w) Tx 1 2 Tk
(ser) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 0 0 0 k
0 R
0 0 0 1 K
0.75 w151.1426 474.2734 m
132.1724 474.2734 L
132.1724 480.8589 L
151.1426 480.8589 L
151.1426 474.2734 L
b151.3987 463.2974 m
132.4285 463.2974 L
132.4285 469.8833 L
151.3987 469.8833 L
151.3987 463.2974 L
bUUUu0 To
1 0 0 1 184.8569 383.6431 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
1 w(G) Tx 1 -8 Tk
(a) Tx 1 4 Tk
(t) Tx 1 6 Tk
(ew) Tx 1 4 Tk
(a) Tx 1 11 Tk
(y) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 R
0 0 0 1 K
0.75 w325.4551 350.2964 m
304.5488 326.8818 L
S304.5488 326.8818 m
179.9436 326.8818 L
179.9436 394.6191 L
304.5488 394.6191 L
304.5488 326.8818 L
s203.3594 417.1982 m
325.4551 417.1982 L
S325.4551 417.1982 m
325.4551 350.2964 L
S203.3594 417.1982 m
179.9436 394.6191 L
S325.4551 417.1982 m
304.5488 394.6191 L
SUUuu415.7715 227.9927 m
394.8657 204.5781 L
S394.8657 204.5781 m
270.2603 204.5781 L
270.2603 272.3154 L
394.8657 272.3154 L
394.8657 204.5781 L
s293.6758 294.8945 m
415.7715 294.8945 L
S415.7715 294.8945 m
415.7715 227.9927 L
S293.6758 294.8945 m
270.2603 272.3154 L
S415.7715 294.8945 m
394.8657 272.3154 L
SU0 To
1 0 0 1 275.9048 257.8901 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
1 w(S) Tx 1 -6 Tk
(er) Tx 1 -25 Tk
(v) Tx 1 11 Tk
(er ) Tx 1 0 Tk
/_Myriad-Italic 10.0352 8.3392 -2.5088 Tf
(m) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
Uu0 To
1 0 0 1 400.6147 383.8516 0 Tp
0 Tv
TP
0 Tr
/_Myriad-Roman 10.0352 8.3392 -2.5088 Tf
(M) Tx 1 -6 Tk
(essage Q) Tx 1 -1 Tk
(ueue) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 R
0 0 0 1 K
0.75 w540.584 352.1782 m
519.6782 328.7632 L
S519.6782 328.7632 m
395.0728 328.7632 L
395.0728 396.501 L
519.6782 396.501 L
519.6782 328.7632 L
s418.4883 419.0801 m
540.584 419.0801 L
S540.584 419.0801 m
540.584 352.1782 L
S418.4883 419.0801 m
395.0728 396.501 L
S540.584 419.0801 m
519.6782 396.501 L
SUU0 To
1 0 0 1 337.7896 225.2754 0 Tp
0 Tv
TP
-16.9242 0 Td
0 Tr
0 O
0 0 0 1 k
1 w1 Ta
(A) Tx 1 3 Tk
(naly) Tx 1 4 Tk
(sis\r) Tx 1 0 Tk
3.6278 -12.0352 Td
(S) Tx 1 -6 Tk
(er) Tx 1 -25 Tk
(v) Tx 1 11 Tk
(er) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
0 R
0 0 0 1 K
0.75 w383.1484 240.0146 m
331.0913 240.0146 L
331.0913 267.6113 L
383.1484 267.6113 L
383.1484 240.0146 L
su0 O
0 0 0 0 k
340.5566 257.2627 m
321.5864 257.2627 L
321.5864 263.8481 L
340.5566 263.8481 L
340.5566 257.2627 L
b340.8125 246.2866 m
321.8423 246.2866 L
321.8423 252.8726 L
340.8125 252.8726 L
340.8125 246.2866 L
bU0 To
1 0 0 1 361.6157 256.9492 0 Tp
0 Tv
TP
-9.443 0 Td
0 Tr
0 0 0 1 k
1 w(W) Tx 1 34 Tk
(eb\r) Tx 1 0 Tk
-3.8535 -12.0352 Td
(S) Tx 1 -6 Tk
(er) Tx 1 -25 Tk
(v) Tx 1 11 Tk
(er) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
uuu0 R
0 0 0 1 K
0.75 w222.5942 226.1113 m
201.6885 202.6963 L
S201.6885 202.6963 m
77.083 202.6963 L
77.083 270.4341 L
201.6885 270.4341 L
201.6885 202.6963 L
s100.4988 293.0132 m
222.5942 293.0132 L
S222.5942 293.0132 m
222.5942 226.1113 L
S100.4988 293.0132 m
77.083 270.4341 L
S222.5942 293.0132 m
201.6885 270.4341 L
SU0 To
1 0 0 1 82.7278 256.0083 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
1 w0 Ta
(S) Tx 1 -6 Tk
(er) Tx 1 -25 Tk
(v) Tx 1 11 Tk
(er 1) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
U0 R
0 0 0 1 K
0.75 w166.7725 207.0869 m
112.8333 207.0869 L
112.8333 235.311 L
166.7725 235.311 L
166.7725 207.0869 L
s0 To
1 0 0 1 144.6123 224.6484 0 Tp
0 Tv
TP
-16.9242 0 Td
0 Tr
0 O
0 0 0 1 k
1 w1 Ta
(A) Tx 1 3 Tk
(naly) Tx 1 4 Tk
(sis\r) Tx 1 0 Tk
3.6278 -12.0352 Td
(S) Tx 1 -6 Tk
(er) Tx 1 -25 Tk
(v) Tx 1 11 Tk
(er) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 0 0 0 k
0 R
0 0 0 1 K
0.75 w122.2915 223.394 m
103.3213 223.394 L
103.3213 229.9795 L
122.2915 229.9795 L
122.2915 223.394 L
b122.5476 212.418 m
103.5771 212.418 L
103.5771 219.0039 L
122.5476 219.0039 L
122.5476 212.418 L
bU189.9714 239.3877 m
137.9138 239.3877 L
137.9138 266.9844 L
189.9714 266.9844 L
189.9714 239.3877 L
su0 O
0 0 0 0 k
147.3794 256.6357 m
128.4092 256.6357 L
128.4092 263.2212 L
147.3794 263.2212 L
147.3794 256.6357 L
b147.6355 245.6597 m
128.6653 245.6597 L
128.6653 252.2451 L
147.6355 252.2451 L
147.6355 245.6597 L
bU0 To
1 0 0 1 168.4385 256.3218 0 Tp
0 Tv
TP
-9.443 0 Td
0 Tr
0 0 0 1 k
1 w(W) Tx 1 34 Tk
(eb\r) Tx 1 0 Tk
-3.8535 -12.0352 Td
(S) Tx 1 -6 Tk
(er) Tx 1 -25 Tk
(v) Tx 1 11 Tk
(er) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
U0 To
1 0 0 1 189.8948 434.0913 0 Tp
0 Tv
TP
0 Tr
/_Myriad-Roman 8.7808 7.2968 -2.1952 Tf
-200 Tt
0 Ta
8.1536 0 Tl
-1.7562 Tc
(<) Tx 1 0 Tk
0 Tt
0 Tc
(< HT) Tx 1 -38 Tk
(TP ) Tx 1 0 Tk
-200 Tt
-1.7562 Tc
(>>) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 R
0 0 0 1 K
0.75 w [1 1 ]0 d183.6025 314.0244 m
229.3882 314.0244 L
SU0 To
1 0 0 1 188.0132 306.77 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
1 w []0 d(<) Tx 1 0 Tk
0 Tt
0 Tc
(< HT) Tx 1 -38 Tk
(TP ) Tx 1 0 Tk
-200 Tt
-1.7562 Tc
(>>) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 R
0 0 0 1 K
0.75 w [1 1 ]0 d274.5464 314.0244 m
345.002 314.0244 L
SU0 To
1 0 0 1 290.2466 306.77 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
1 w []0 d(<) Tx 1 0 Tk
0 Tt
0 Tc
(< HT) Tx 1 -38 Tk
(TP ) Tx 1 0 Tk
-200 Tt
-1.7562 Tc
(>>) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
0 To
1 0 0 1 338.541 362.5903 0 Tp
0 Tv
TP
0 Tr
(<) Tx 1 0 Tk
0 Tt
0 Tc
(< ODBC ) Tx 1 0 Tk
-200 Tt
-1.7562 Tc
(>>) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
0 To
1 0 0 1 452.8003 255.9668 0 Tp
0 Tv
TP
0 Tr
(<) Tx 1 0 Tk
0 Tt
0 Tc
(< ODBC ) Tx 1 0 Tk
-200 Tt
-1.7562 Tc
(>>) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
0 R
0 0 0 1 K
0.75 w359.9497 207.7139 m
306.0107 207.7139 L
306.0107 235.938 L
359.9497 235.938 L
359.9497 207.7139 L
s0 To
1 0 0 1 224.6938 219.5317 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
1 w(<) Tx 1 0 Tk
0 Tt
0 Tc
(< HT) Tx 1 -38 Tk
(TP ) Tx 1 0 Tk
-200 Tt
-1.7562 Tc
(>>) Tx 1 0 Tk
(\r) Tx 1 0 Tk
TO
u0 0 0 0 k
0 R
0 0 0 1 K
0.75 w315.4688 224.0215 m
296.4985 224.0215 L
296.4985 230.6069 L
315.4688 230.6069 L
315.4688 224.0215 L
b315.7246 213.0454 m
296.7544 213.0454 L
296.7544 219.6309 L
315.7246 219.6309 L
315.7246 213.0454 L
bULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
